// This code was generated by a tool: ViewModelTemplates\EntityViewModelTemplate.tt
namespace Admin.PersonModule.ViewModels
{
    using System;
    using System.Linq.Expressions;

    using Common.Events;
    using Common.Extensions;
    using Common.Framework;
    using Common.Services;

    using EnergyTrading.Mdm.Contracts;
    using EnergyTrading.MDM.Contracts.Sample;

    using Microsoft.Practices.Prism.Events;
    using Microsoft.Practices.Prism.ViewModel;

    public class PersonViewModel : NotificationObject
    {
        private readonly IEventAggregator eventAggregator;

        private readonly Person person;

        private bool canSave;

        private string email;

        private DateTime end;

        private string faxnumber;

        private string forename;

        private string role;

        private DateTime start;

        private string surname;

        private string telephonenumber;

        public PersonViewModel(IEventAggregator eventAggregator)
        {
            this.eventAggregator = eventAggregator;

            this.person = new Person
                              {
                                  MdmSystemData =
                                      new SystemData
                                          {
                                              StartDate = DateUtility.MinDate, 
                                              EndDate = DateUtility.MaxDate
                                          }
                              };

            this.Start = this.person.MdmSystemData.StartDate.Value;

            this.End = this.person.MdmSystemData.EndDate.Value;
        }

        public PersonViewModel(EntityWithETag<Person> ewe, IEventAggregator eventAggregator)
        {
            this.eventAggregator = eventAggregator;
            this.person = ewe.Object;

            this.Id = this.person.MdmId();
            this.ETag = ewe.ETag;

            if (this.person.MdmSystemData != null && this.person.MdmSystemData.StartDate != null)
            {
                this.Start = this.person.MdmSystemData.StartDate.Value;
            }

            if (this.person.MdmSystemData != null && this.person.MdmSystemData.EndDate != null)
            {
                this.End = this.person.MdmSystemData.EndDate.Value;
            }

            this.Forename = this.person.Details.Forename;

            this.Surname = this.person.Details.Surname;

            this.FaxNumber = this.person.Details.FaxNumber;

            this.TelephoneNumber = this.person.Details.TelephoneNumber;

            this.Role = this.person.Details.Role;

            this.Email = this.person.Details.Email;
        }

        public bool CanSave
        {
            get
            {
                return this.canSave;
            }

            set
            {
                this.canSave = value;
                this.RaisePropertyChanged(() => this.CanSave);
            }
        }

        public string ETag { get; private set; }

        public string Email
        {
            get
            {
                return this.email;
            }

            set
            {
                this.ChangeProperty(() => this.Email, ref this.email, value);
            }
        }

        public DateTime End
        {
            get
            {
                return this.end;
            }

            set
            {
                this.ChangeProperty(() => this.End, ref this.end, value);
            }
        }

        public string FaxNumber
        {
            get
            {
                return this.faxnumber;
            }

            set
            {
                this.ChangeProperty(() => this.FaxNumber, ref this.faxnumber, value);
            }
        }

        public string Forename
        {
            get
            {
                return this.forename;
            }

            set
            {
                this.ChangeProperty(() => this.Forename, ref this.forename, value);
            }
        }

        public int? Id { get; private set; }

        public string Name
        {
            get
            {
                return Surname + ", " + Forename;
            }
        }

        public string Role
        {
            get
            {
                return this.role;
            }

            set
            {
                this.ChangeProperty(() => this.Role, ref this.role, value);
            }
        }

        public DateTime Start
        {
            get
            {
                return this.start;
            }

            set
            {
                this.ChangeProperty(() => this.Start, ref this.start, value);
            }
        }

        public string Surname
        {
            get
            {
                return this.surname;
            }

            set
            {
                this.ChangeProperty(() => this.Surname, ref this.surname, value);
            }
        }

        public string TelephoneNumber
        {
            get
            {
                return this.telephonenumber;
            }

            set
            {
                this.ChangeProperty(() => this.TelephoneNumber, ref this.telephonenumber, value);
            }
        }

        public Person Model()
        {
            return new Person
                       {
                           Details =
                               new PersonDetails
                                   {
                                       Forename = this.Forename, 
                                       Surname = this.Surname, 
                                       FaxNumber = this.FaxNumber, 
                                       TelephoneNumber = this.TelephoneNumber, 
                                       Role = this.Role, 
                                       Email = this.Email
                                   }, 
                           MdmSystemData = new SystemData { StartDate = this.Start, EndDate = this.End }
                       };
        }

        private void ChangeProperty<T>(Expression<Func<T>> property, ref T variable, T newValue)
        {
            variable = newValue;
            this.RaisePropertyChanged(property);
            this.CanSave = this.HasChanges();
            this.eventAggregator.Publish(new CanSaveEvent(this.CanSave));
        }

        private bool HasChanges()
        {
            return
                !(this.person.MdmSystemData.StartDate == this.Start && this.person.MdmSystemData.EndDate == this.End
                  && this.person.Details.Forename == this.Forename && this.person.Details.Surname == this.Surname
                  && this.person.Details.FaxNumber == this.FaxNumber
                  && this.person.Details.TelephoneNumber == this.TelephoneNumber
                  && this.person.Details.Role == this.Role && this.person.Details.Email == this.Email);
        }
    }
}