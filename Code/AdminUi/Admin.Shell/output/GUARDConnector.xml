<?xml version="1.0"?>
<doc>
  <assembly>
    <name>GUARDConnector</name>
  </assembly>
  <members>
    <member name="T:GUARDConnector.DomainLayer.Domain.GuardDomainEntity">
      <summary>
            Abstract base class for all Guard entities
            </summary>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.GuardDomainEntity.#ctor(GUARDConnector.ServiceProxy.IGuardProxyClient)">
      <summary>
            Creates a new GuardDomainEntity.
            </summary>
      <param name="proxyClient">The proxy client.</param>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.GuardDomainEntity.Id">
      <summary>
            The unique Guard id of this entity.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.PrincipalRelatedEntity">
      <summary>
            Abstract base class for principal-related Guard entities
            </summary>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.PrincipalRelatedEntity.#ctor(GUARDConnector.DomainLayer.Domain.Principal,GUARDConnector.ServiceProxy.IGuardProxyClient)">
      <summary>
            Creates a new PrincipalRelatedEntity.
            </summary>
      <param name="principal">The corresponding <see cref="P:GUARDConnector.DomainLayer.Domain.PrincipalRelatedEntity.Principal" />.</param>
      <param name="proxyClient">The proxy client.</param>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.PrincipalRelatedEntity.Principal">
      <summary>
            Principal to which this entity belongs.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.GuardObject">
      <summary>
            A guard object, which represents an application entity
            </summary>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.GuardObject.GetDataOwner">
      <summary>
            Retrieves the dataowner group of this guard object.
            </summary>
      <returns>The dataowner group, to which this guard object belongs to.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.GuardObject.GetUsersWithRight(GUARDConnector.DomainLayer.Domain.Right)">
      <summary>
            Retrieves all users with a specific right on this guard object.
            </summary>
      <param name="right">The <see cref="T:GUARDConnector.DomainLayer.Domain.Right" /> which is tested.</param>
      <returns>All users that have the specified right on this guard object.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.GuardObject.GetObjectGroups">
      <summary>
            Retrieves all object groups where this guard object is part of.
            </summary>
      <returns>All object groups where this guard object is part of.</returns>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.GuardObject.Name">
      <summary>
            Name of the guard object.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.GuardObject.ForeignId">
      <summary>
            Foreign id of the guard object.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.GuardObject.ForeignKey">
      <summary>
            Foreign key of the guard object.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.GuardObject.Type">
      <summary>
            Type of the guard object.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.GuardMetadataEntity">
      <summary>
            Abstract base class for principal-related metadata, such as types and rights.
            </summary>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.GuardMetadataEntity.#ctor(GUARDConnector.DomainLayer.Domain.Principal,GUARDConnector.ServiceProxy.IGuardProxyClient)">
      <summary>
            Creates a new GuardMetadataEntity.
            </summary>
      <param name="principal">The corresponding <see cref="T:GUARDConnector.DomainLayer.Domain.Principal" />.</param>
      <param name="proxyClient">The proxy client.</param>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.GuardMetadataEntity.Name">
      <summary>
            The name of this entity.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.GuardMetadataEntity.Description">
      <summary>
            The description of this entity.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.GuardMetadataEntity.Intrinsic">
      <summary>
            Flag that indicates whether this entity is intrinsic.
            If true, this entity belongs to the Guard principal.
            If false, this entity belongs to the specified principal.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.ObjectGroup">
      <summary>
            An objectgroup in Guard.
            </summary>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.ObjectGroup.GetParentObjectGroup">
      <summary>
            Retrieves the parent objectgroup.
            </summary>
      <returns>Parent objectgroup of this group.</returns>
      <exception cref="T:GUARDConnector.ServiceProxy.GuardConnectorException">Thrown when called on a root group that has no parent.</exception>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.ObjectGroup.GetChildrenObjectGroups">
      <summary>
            Retrieves all children groups of this group.
            </summary>
      <returns>Children groups of this group.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.ObjectGroup.GetObjects">
      <summary>
            Retrieves all objects in this group.
            </summary>
      <returns>Objects which are in this object.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.ObjectGroup.GetDataOwner">
      <summary>
            Retrieves the dataowner group of this objectgroup.
            </summary>
      <returns>The dataowner group, to which this objectgroup belongs.</returns>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.ObjectGroup.Name">
      <summary>
            Name of the objectgroup.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.ObjectGroup.Description">
      <summary>
            Description of the objectgroup.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.Property">
      <summary>
            Represents a property in Guard.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.Property.AvailableValues">
      <summary>
            Collection of available values for this property, in case they have been defined.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.PropertyCollection">
      <summary>
            Set of properties defined for a principal.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.PropertyCollection.Item(System.Int64)">
      <summary>
            Indexer that retrieves a Property by its id.
            </summary>
      <param name="id">Id of the Property.</param>
      <returns>Property with the given id.</returns>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.PropertyCollection.Item(System.String)">
      <summary>
            Indexer that retrieves a Proeprty by its name.
            </summary>
      <param name="name">Name of the Property.</param>
      <returns>Property with the given name.</returns>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.Right">
      <summary>
            Represents a right in Guard.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.RightCollection">
      <summary>
            Set of rights used in a principal.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.RightCollection.Item(System.Int64)">
      <summary>
            Indexer that retrieves a Right by its id.
            </summary>
      <param name="id">Id of the Right.</param>
      <returns>Right with the given id.</returns>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.RightCollection.Item(System.String)">
      <summary>
            Indexer that retrieves a Right by its name.
            </summary>
      <param name="name">Name of the Right.</param>
      <returns>Right with the given name.</returns>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.Type">
      <summary>
            Represents the type of a <see cref="T:GUARDConnector.DomainLayer.Domain.GuardObject" /> in Guard.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.TypeCollection">
      <summary>
            Set of types used in a principal.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.TypeCollection.Item(System.Int64)">
      <summary>
            Indexer that retrieves a type by its id.
            </summary>
      <param name="id">Id of the type.</param>
      <returns>type with the given id.</returns>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.TypeCollection.Item(System.String)">
      <summary>
            Indexer that retrieves a type by its name.
            </summary>
      <param name="name">Name of the type.</param>
      <returns>type with the given name.</returns>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.UserProperty">
      <summary>
            A users property.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.UserProperty.User">
      <summary>
            The user for which this property value is set.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.UserProperty.Property">
      <summary>
            The property for which the value is set.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.UserProperty.Value">
      <summary>
            The user property value.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.GuardClient">
      <summary>
            GuardClient is the main entry class into the Guard .NET Connector library.
            It provides authorization mechanisms (Username / Password, SSO, Trusted Server),
            and it can be used to retrieve a principal object.
            </summary>
    </member>
    <member name="M:GUARDConnector.DomainLayer.GuardClient.#ctor(GUARDConnector.ServiceProxy.GuardEnvironment)">
      <summary>
            Creates an instance of GuardClient using a specified environment and 
            the SSO (Single-Sign-On) authorization mechanism.
            </summary>
      <param name="environment">Environment to use (Production, Test or Development)</param>
    </member>
    <member name="M:GUARDConnector.DomainLayer.GuardClient.#ctor(GUARDConnector.ServiceProxy.GuardEnvironment,GUARDConnector.ServiceProxy.Configuration.IGuardConnectorConfiguration)">
      <summary>
            Creates an instance of GuardClient using a specified environment and 
            the SSO (Single-Sign-On) authorization mechanism.
            </summary>
      <param name="environment">Environment to use (Production, Test or Development)</param>
      <param name="configuration">Configuration to use</param>
    </member>
    <member name="M:GUARDConnector.DomainLayer.GuardClient.#ctor(System.String,System.String,GUARDConnector.ServiceProxy.GuardEnvironment)">
      <summary>
            Creates an instance of GuardClient using a specified environment and 
            the Username / Password authorization mechanism.
            </summary>
      <param name="userName">Username of the user in Guard</param>
      <param name="password">Password as defined by a Guard global administrator</param>
      <param name="environment">Environment to use (Production, Test or Development)</param>
    </member>
    <member name="M:GUARDConnector.DomainLayer.GuardClient.#ctor(System.String,System.String,GUARDConnector.ServiceProxy.GuardEnvironment,GUARDConnector.ServiceProxy.Configuration.IGuardConnectorConfiguration)">
      <summary>
            Creates an instance of GuardClient using a specified environment and 
            the Username / Password authorization mechanism.
            </summary>
      <param name="userName">Username of the user in Guard</param>
      <param name="password">Password as defined by a Guard global administrator</param>
      <param name="environment">Environment to use (Production, Test or Development)</param>
      <param name="configuration">Configuration to use</param>
    </member>
    <member name="M:GUARDConnector.DomainLayer.GuardClient.#ctor(System.String,System.String,System.String,GUARDConnector.ServiceProxy.GuardEnvironment)">
      <summary>
            Creates an instance of GuardClient using a specified environment and 
            the Trusted Server authorization mechanism.
            </summary>
      <param name="userName">User to login via TS</param>
      <param name="trustedServerName">Trusted server name to use</param>
      <param name="trustedServerKey">Private trusted server key (Base64-encoded)</param>
      <param name="environment">Environment to use (Production, Test or Development)</param>
    </member>
    <member name="M:GUARDConnector.DomainLayer.GuardClient.#ctor(System.String,System.String,System.String,GUARDConnector.ServiceProxy.GuardEnvironment,GUARDConnector.ServiceProxy.Configuration.IGuardConnectorConfiguration)">
      <summary>
            Creates an instance of GuardClient using a specified environment and 
            the Trusted Server authorization mechanism.
            </summary>
      <param name="userName">User to login via TS</param>
      <param name="trustedServerName">Trusted server name to use</param>
      <param name="trustedServerKey">Private trusted server key (Base64-encoded)</param>
      <param name="environment">Environment to use (Production, Test or Development)</param>
      <param name="configuration">Configuration to use</param>
    </member>
    <member name="M:GUARDConnector.DomainLayer.GuardClient.GetPrincipal(System.String)">
      <summary>
            Returns a principal by its name.
            </summary>
      <param name="name">Name of the principal</param>
      <returns>Principal</returns>
      <exception cref="T:System.ArgumentNullException">Thrown when the name is null or empty.</exception>
      <exception cref="T:GUARDConnector.ServiceProxy.GuardConnectorException">Thrown when a problem with the Guard Connector occurs.</exception>
    </member>
    <member name="M:GUARDConnector.DomainLayer.GuardClient.Close">
      <summary>
            Closes active connections to Guard and disposes the object.
            </summary>
    </member>
    <member name="M:GUARDConnector.DomainLayer.GuardClient.Dispose">
      <summary>
            Disposes the object.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.Principal">
      <summary>
            A guard principal.
            You can query all major guard entities from this class.  
            </summary>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.Principal.GetCurrentUser">
      <summary>
            Retrieves the currently logged in user.
            </summary>
      <returns>User that is currently logged in.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.Principal.GetUser(System.String)">
      <summary>
            Retrieves the user object for a specific username.
            </summary>
      <param name="userName">The username.</param>
      <returns>User object for the specified username.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.Principal.TryGetUser(System.String,GUARDConnector.DomainLayer.Domain.User@)">
      <summary>
            Tries to retrieve the user object for a specific username.
            </summary>
      <param name="userName">The username.</param>
      <param name="user">User object for the specified username or "null" if the user was not found.</param>
      <returns>Boolean value indicating whether the user was found.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.Principal.GetAllPrincipalUsers">
      <summary>
            Retrieves a list of all users that are associated to at least one usergroup of this principal.
            </summary>
      <returns>All users which have at least one usergroup membership in this principal.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.Principal.GetPrincipalAdministrators">
      <summary>
            Retrieves all users which are administrators of this principal.
            </summary>
      <returns>All users which are administrators of this principal.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.Principal.GetUserGroup(System.Int64)">
      <summary>
            Retrieves a usergroup of this principal specified by its id.
            </summary>
      <param name="userGroupId">The id of the usergroup.</param>
      <returns>The usergroup which belongs to the specified id.</returns>
      <exception cref="T:GUARDConnector.ServiceProxy.GuardConnectorException">Thrown when the specified id does not belong to a usergroup of this principal.</exception>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.Principal.GetDataOwnerUserGroups">
      <summary>
            Retrieves all dataowner groups of this principal.
            </summary>
      <returns>All dataowner groups of this principal.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.Principal.GetObjectGroup(System.Int64)">
      <summary>
            Retrieves an objectgroup of this principal specified by its id.
            </summary>
      <param name="objectGroupId">The id of the objectgroup.</param>
      <returns>The objectgroup which belongs to the specified id.</returns>
      <exception cref="T:GUARDConnector.ServiceProxy.GuardConnectorException">Thrown when the specified id does not belong to an objectgroup of this principal.</exception>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.Principal.GetGuardObject(System.Int64,GUARDConnector.DomainLayer.Domain.Type)">
      <summary>
            Retrieves a guard object specified by its foreign id and type.
            </summary>
      <param name="foreignId">The foreign id of the guard object.</param>
      <param name="type">The <see cref="T:GUARDConnector.DomainLayer.Domain.Type" /> of the guard object.</param>
      <returns>The guard object which belongs to the specified foreign id and type,</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.Principal.GetGuardObject(System.String,GUARDConnector.DomainLayer.Domain.Type)">
      <summary>
            Retrieves a guard object specified by its foreign key and type.
            </summary>
      <param name="foreignKey">The foreign key of the guard object.</param>
      <param name="type">The <see cref="T:GUARDConnector.DomainLayer.Domain.Type" /> of the guard object.</param>
      <returns>The guard object which belongs to the specified foreign key and type,</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.Principal.GetGuardObjects(GUARDConnector.DomainLayer.Domain.Type)">
      <summary>
            Retrieves all guard object which have the specified type.
            </summary>
      <param name="type">The <see cref="T:GUARDConnector.DomainLayer.Domain.Type" /> of the objects.</param>
      <returns>All objects which have the specified type.</returns>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.Principal.Name">
      <summary>
            Name of this principal.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.Principal.Description">
      <summary>
            Description of this principal.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.Principal.Types">
      <summary>
            Collection of Rights of this principal.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.Principal.Rights">
      <summary>
            Collection of Types of this principal.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.Principal.Properties">
      <summary>
            Collection of Properties of this principal.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.User">
      <summary>
            Represents a user in Guard. All user data is coming from the RCD.
            </summary>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.User.GetUserGroups">
      <summary>
            Retrieves all <see cref="T:GUARDConnector.DomainLayer.Domain.UserGroup" /> instances that this user has an active membership for.
            </summary>
      <returns>
        <see cref="T:GUARDConnector.DomainLayer.Domain.UserGroup" /> instances this user is an active member of</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.User.GetUserGroups(GUARDConnector.DomainLayer.Domain.UserGroup)">
      <summary>
            Returns all usergroups for this user which belong to the specified dataowner.
            </summary>
      <param name="dataOwnerUserGroup">DataOwner group</param>
      <returns>All <see cref="T:GUARDConnector.DomainLayer.Domain.UserGroup" /> instances this user is an active member of and that belong to a specified dataowner</returns>
      <exception cref="T:System.ArgumentNullException">Thrown when the dataowner group is invalid.</exception>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.User.IsMemberOfUserGroup(GUARDConnector.DomainLayer.Domain.UserGroup)">
      <summary>
            Indicates whether this user has an active membership in a specified usergroup.
            </summary>
      <param name="userGroup">
        <see cref="T:GUARDConnector.DomainLayer.Domain.UserGroup" /> to verify membership for.</param>
      <returns>Flag that indicates whether this user is an active member.</returns>
      <exception cref="T:System.ArgumentNullException">Thrown when the usergroup is null.</exception>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.User.HasRight(GUARDConnector.DomainLayer.Domain.Right,GUARDConnector.DomainLayer.Domain.GuardObject)">
      <summary>
            Verifies whether this user has a specific right on a specific object.
            </summary>
      <param name="right">
        <see cref="T:GUARDConnector.DomainLayer.Domain.Right" /> to check.</param>
      <param name="guardObject">
        <see cref="T:GUARDConnector.DomainLayer.Domain.GuardObject" /> to check.</param>
      <returns>True when the user has the right, false otherwise.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.User.HasRight(GUARDConnector.DomainLayer.Domain.Right,GUARDConnector.DomainLayer.Domain.Type)">
      <summary>
            Verifies whether this user has a static right on a type.
            </summary>
      <param name="right">
        <see cref="T:GUARDConnector.DomainLayer.Domain.Right" /> to check.</param>
      <param name="type">
        <see cref="T:GUARDConnector.DomainLayer.Domain.Type" /> to check.</param>
      <returns>True when the user has the right, false otherwise.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.User.GetGuardObjects(GUARDConnector.DomainLayer.Domain.Right)">
      <summary>
            Retrieves all objects this user has a specific right on.
            </summary>
      <param name="right">
        <see cref="T:GUARDConnector.DomainLayer.Domain.Right" /> to check.</param>
      <returns>All objects the user has the right on.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.User.GetGuardObjects(GUARDConnector.DomainLayer.Domain.Right,GUARDConnector.DomainLayer.Domain.Type)">
      <summary>
            Retrieves all objects this user has a specific right on, and that are of the specified type.
            </summary>
      <param name="right">
        <see cref="T:GUARDConnector.DomainLayer.Domain.Right" /> to check.</param>
      <param name="type">
        <see cref="T:GUARDConnector.DomainLayer.Domain.Type" /> to check.</param>
      <returns>All objects of the specified type which the user has the right on.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.User.GetRights(GUARDConnector.DomainLayer.Domain.GuardObject)">
      <summary>
            Retrieves all rights this user has on a specific object.
            </summary>
      <param name="guardObject">
        <see cref="T:GUARDConnector.DomainLayer.Domain.GuardObject" /> to check.</param>
      <returns>All rights the user has on this object.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.User.GetUserProperty(GUARDConnector.DomainLayer.Domain.Property)">
      <summary>
            Retrieves a user property for a specified property
            </summary>
      <param name="property">
        <see cref="T:GUARDConnector.DomainLayer.Domain.Property" /> to get the user property for.</param>
      <returns>The user property for this property, if it has been set.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.User.GetUserProperties">
      <summary>
            Retrieves all user properties (on principal level)
            </summary>
      <returns>All user properties.</returns>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.User.Account">
      <summary>
            The RWE-Account name of this user without the domain name. 
            Usually, the format is RXXXXXX or REXXXX, with X being numbers from 0-9.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.User.Company">
      <summary>
            The company of this user as defined in the RCD.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.User.Department">
      <summary>
            The department of this user as defined in the RCD.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.User.Domain">
      <summary>
            The domain of this user as defined in the RCD.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.User.FirstName">
      <summary>
            The firstname of this user as defined in the RCD.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.User.LastName">
      <summary>
            The lastname of this user as defined in the RCD.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.User.Mail">
      <summary>
            The e-mail address of this user as defined in the RCD.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.User.Telephone">
      <summary>
            The telephone number of this user as defined in the RCD.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.User.Title">
      <summary>
            The title of this user as defined in the RCD.
            </summary>
    </member>
    <member name="T:GUARDConnector.DomainLayer.Domain.UserGroup">
      <summary>
            A usergroup in Guard.
            </summary>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.UserGroup.GetParentUserGroup">
      <summary>
            Retrieves the parent usergroup.
            </summary>
      <returns>Parent usergroup of this group.</returns>
      <exception cref="T:GUARDConnector.ServiceProxy.GuardConnectorException">Thrown when called on a root group that has no parent.</exception>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.UserGroup.GetChildrenUserGroups">
      <summary>
            Retrieves all children groups of this group.
            </summary>
      <returns>Children groups of this group.</returns>
    </member>
    <member name="M:GUARDConnector.DomainLayer.Domain.UserGroup.GetUsers">
      <summary>
            Retrieves all users actively assigned to this group.
            </summary>
      <returns>Users who are active members of this group.</returns>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.UserGroup.Name">
      <summary>
            Name of the usergroup.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.UserGroup.Description">
      <summary>
            Description of the usergroup.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.UserGroup.ValidFrom">
      <summary>
            Date from which this user group is valid - is not taken into account when AlwaysValid is set to true.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.UserGroup.ValidTo">
      <summary>
            Date until this user group is valid - is not taken into account when AlwaysValid is set to true.
            </summary>
    </member>
    <member name="P:GUARDConnector.DomainLayer.Domain.UserGroup.AlwaysValid">
      <summary>
            Flag that indicates whether this group is always valid, regardless of a ValidFrom -&gt; ValidTo definition.
            </summary>
    </member>
  </members>
</doc>