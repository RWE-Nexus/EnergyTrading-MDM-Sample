<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	
 	xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell" 
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna" 
	mc:Ignorable="d" >
<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="Brushes.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	
<!--Black Theme Brushes-->

<!--Window Brushes-->	
	<!--Default Button Colours-->
    <Color x:Key="ButtonOuterBorderDefaultBackgroundBrush">#00000000</Color>
    <Color x:Key="ButtonOuterBorderDefaultBorderBrush">#00770000</Color>
	<Color x:Key="ButtonInnerBorderDefaultBackgroundBrush">#00000000</Color>
    <Color x:Key="ButtonInnerBorderDefaultBorderBrush">#ff000000</Color>
	
		<!--Hover Button Colours-->
    <Color x:Key="ButtonOuterBorderHoverBorderBrush">#FFd2e2ea</Color>
	<Color x:Key="ButtonOuterBorderHoverBackgroundBrush1">#ff3e3f3f</Color>
	<Color x:Key="ButtonOuterBorderHoverBackgroundBrush2">#ff294149</Color>
	<Color x:Key="ButtonOuterBorderHoverBackgroundBrush3">#ff07212a</Color>
	<Color x:Key="ButtonOuterBorderHoverBackgroundBrush4">#FF2b4651</Color>
	<Color x:Key="ButtonInnerBorderHoverBorderBrush">#00000000</Color>
	<Color x:Key="ButtonInnerBorderHoverBackgroundBrush1">#0000afff</Color>
	<Color x:Key="ButtonInnerBorderHoverBackgroundBrush2">#ff00afff</Color>
	
		<!--Pressed Button Colours-->
	<Color x:Key="ButtonOuterBorderPressedBackgroundBrush1">#FF000000</Color>
    <Color x:Key="ButtonOuterBorderPressedBackgroundBrush2">#FF000000</Color>
    <Color x:Key="ButtonOuterBorderPressedBackgroundBrush3">#FF444444</Color>
    <Color x:Key="ButtonOuterBorderPressedBackgroundBrush4">#FF222222</Color>
    <Color x:Key="ButtonOuterBorderPressedBorderBrush">#FF87939f</Color>
    <Color x:Key="ButtonInnerBorderPressedBackgroundBrush">#00000000</Color>
    <Color x:Key="ButtonInnerBorderPressedBorderBrush">#00000000</Color>
	
    	<!--Checked Button Colours-->
	<Color x:Key="ButtonOuterBorderCheckedBackgroundBrush1">#FF000000</Color>
	<Color x:Key="ButtonOuterBorderCheckedBackgroundBrush2">#FF000000</Color>
	<Color x:Key="ButtonOuterBorderCheckedBackgroundBrush3">#FF676767</Color>
	<Color x:Key="ButtonOuterBorderCheckedBackgroundBrush4">#FF353535</Color>
    <Color x:Key="ButtonOuterBorderCheckedBorderBrush">#FFffffff</Color>
    <Color x:Key="ButtonInnerBorderCheckedBackgroundBrush">#00000000</Color>
    <Color x:Key="ButtonInnerBorderCheckedBorderBrush">#FF000000</Color>
	
<!--Panel Brushes-->
	<!--Panels-->
	<Color x:Key="PanelBorderBrush1">#FFFFFFFF</Color>
	<Color x:Key="PanelBorderBrush2">#FFFFFFFF</Color>
	<Color x:Key="PanelBackgroundBrush1">#FFa8b0b3</Color>
	<Color x:Key="PanelBackgroundBrush2">#FF7c8389</Color>
	<Color x:Key="PanelLabelForegroundBrush">#FF2e3b44</Color>
	<Color x:Key="WindowForegroundBrush">#FFFFFFFF</Color>
	
	<!--Default Panel Button Colours-->
    <Color x:Key="PanelButtonOuterBorderDefaultBackgroundBrush">#00000000</Color>
    <Color x:Key="PanelButtonOuterBorderDefaultBorderBrush">#00000000</Color>
	<Color x:Key="PanelButtonInnerBorderDefaultBackgroundBrush">#00000000</Color>
    <Color x:Key="PanelButtonInnerBorderDefaultBorderBrush">#00000000</Color>
	
		<!--Hover Panel Button Colours-->
    <Color x:Key="PanelButtonOuterBorderHoverBorderBrush">#FF626f76</Color>
	<Color x:Key="PanelButtonOuterBorderHoverBackgroundBrush1">#ff99a2a5</Color>
	<Color x:Key="PanelButtonOuterBorderHoverBackgroundBrush2">#ffd2d3d3</Color>
	<Color x:Key="PanelButtonInnerBorderHoverBorderBrush">#ffd6d9da</Color>
	<Color x:Key="PanelButtonInnerBorderHoverBackgroundBrush1">#00000000</Color>
	<Color x:Key="PanelButtonInnerBorderHoverBackgroundBrush2">#00000000</Color>
	
		<!--Pressed Panel Button Colours-->
	<Color x:Key="PanelButtonOuterBorderPressedBackgroundBrush1">#FF5f696d</Color>
    <Color x:Key="PanelButtonOuterBorderPressedBackgroundBrush2">#FF8f989d</Color>
    <Color x:Key="PanelButtonOuterBorderPressedBorderBrush">#FF647379</Color>
    <Color x:Key="PanelButtonInnerBorderPressedBackgroundBrush">#00000000</Color>
    <Color x:Key="PanelButtonInnerBorderPressedBorderBrush">#ffc5c7c8</Color>
	
    	<!--Checked Panel Button Colours-->
	<Color x:Key="PanelButtonOuterBorderCheckedBackgroundBrush1">#FF5f696d</Color>
    <Color x:Key="PanelButtonOuterBorderCheckedBackgroundBrush2">#FF8f989d</Color>
    <Color x:Key="PanelButtonOuterBorderCheckedBorderBrush">#FF647379</Color>
    <Color x:Key="PanelButtonInnerBorderCheckedBackgroundBrush">#00000000</Color>
    <Color x:Key="PanelButtonInnerBorderCheckedBorderBrush">#ffc5c7c8</Color>
	
	
	
	
	
	
	
	
	
	
<!--Window Generic Background -->
    <Color x:Key="MenuSelectedTextColor">#863234</Color>
    <SolidColorBrush x:Key="ButtonWindowBackgroundColor" Color="#FF8D0505"/>
    <SolidColorBrush x:Key="WindowGenericBackgroundBrush" Color="#FF000A11"/>
    <LinearGradientBrush x:Key="WindowGenericBorderBrush" EndPoint="0.936,0.92" StartPoint="0.1,0.12">
    	<GradientStop Color="#ffdfdfdf" Offset="0"/>
    	<GradientStop Color="#ff606060" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="WindowHeaderBorderBrush">
    	<GradientStop Color="#00000000"/>
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="WindowHeaderIconBackgroundBrush">
    	<GradientStop Color="#00000000"/>
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="WindowHeaderTitleBackgroundBrush" EndPoint="0.949,0.516" StartPoint="0.102,0.469">
    	<GradientStop Color="#00000000"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="WindowHeaderBackgroundBrush">
    	<GradientStop Color="#00000000"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="WindowHeaderIconBufferBackgroundBrush">
    	<GradientStop Color="#00000000"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="WindowHeaderIconBufferBackgroundBrush2">
    	<GradientStop Color="#00000000"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ForegroundCriteriaBrush" Color="{DynamicResource PanelLabelForegroundBrush}"/>

	    <LinearGradientBrush x:Key="SearchcriteriaBorderBrush" EndPoint="0.99,0.267" StartPoint="0.955,-0.015">
    	<GradientStop Color="{DynamicResource PanelBorderBrush1}" Offset="0"/>
    	<GradientStop Color="{DynamicResource PanelBorderBrush2}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BodysectionBorderBrush" Color="#FF688CAF"/>
    <SolidColorBrush x:Key="BodysectionBackgroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="BodysectionHeaderForegroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DropdownArrowForegroundBrush" Color="#FFFFFFFF"/>






	<Style x:Key="WindowHeaderTextStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontSize" Value="13"/>
		<Setter Property="Foreground" Value="{DynamicResource WindowHeaderTextForegroundBrush}"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="5,0,15,0"/>
	</Style>
	
	<Style x:Key="SectionHeaderTextStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="FontFamily" Value="Segoe UI"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Foreground" Value="{DynamicResource BodysectionHeaderForegroundBrush}"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Margin" Value="5,0,0,0"/>
	</Style>

<!--New window style using Microsoft.Windows.Shell integration-->
  	<Style x:Key="BlackWindowStyle" TargetType="{x:Type Window}">
		<Setter Property="shell:WindowChrome.WindowChrome">
	      	<Setter.Value>
	        	<shell:WindowChrome 
				GlassFrameThickness="0" 
				ResizeBorderThickness="12"
		       	CaptionHeight="15" 
				CornerRadius="15" />
			</Setter.Value>
	   	</Setter>
	    <Setter Property="Template">
	      	<Setter.Value>
	        	<ControlTemplate TargetType="{x:Type Window}">
	          		<Border MinWidth="200" MinHeight="200" Height="Auto" Width="Auto">
			            <Grid x:Name="WindowGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
						<Rectangle x:Name="WindowBackground" Style="{DynamicResource WindowBackgroundStyle}" Fill="#FF001A2C"/>
						<Rectangle Style="{DynamicResource WindowHeaderBackgroundStyle}" x:Name="WindowHeaderBackground"/>
						<AdornerDecorator Grid.Row="0" Grid.Column="0" Margin="0">
			                <!--Window content will be displayed in here-->
			                <ContentPresenter Content="{TemplateBinding Content}" Margin="5,27,5,5"/>
						</AdornerDecorator>
						<Grid Margin="10,5,10,0" x:Name="WindowHeaderContainer" VerticalAlignment="Top">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="27.31"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="130"/>
							</Grid.ColumnDefinitions>
							<Grid HorizontalAlignment="Stretch" x:Name="WindowHeaderInnerGrid" VerticalAlignment="Top" Height="Auto" Grid.ColumnSpan="3">
								<Grid.ColumnDefinitions>
									<ColumnDefinition/>
									<ColumnDefinition Width="283.04"/>
									<ColumnDefinition Width="Auto" MinWidth="63"/>
								</Grid.ColumnDefinitions>
								<Rectangle x:Name="WindowHeaderFade" Fill="{DynamicResource WindowHeaderTitleBackgroundBrush}"/>
								<Canvas x:Name="TabBegin" Grid.Column="1">
									<Rectangle Style="{DynamicResource WindowHeaderIconBufferBackgroundStyle}" x:Name="bgTab"/>
									<Path Style="{DynamicResource WindowHeaderIconBufferBackgroundStyle2}"  x:Name="pathTab" />
								</Canvas>
								<Rectangle Style="{DynamicResource WindowHeaderBackgroundStyle2}" x:Name="HeaderBackground"/>
<StackPanel Grid.Column="4" x:Name="WindowButtonContainer" Orientation="Horizontal" HorizontalAlignment="Right" >
                    <Button Focusable="False" Style="{DynamicResource WindowButtonStyle}" x:Name="icMinimise" ToolTip="Minimise" shell:WindowChrome.IsHitTestVisibleInChrome="True" Command="{x:Static shell:SystemCommands.MinimizeWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                      <Frame Focusable="False" Template="{DynamicResource icMinimise}"/>
                    </Button>
                    <Button Focusable="False" Style="{DynamicResource WindowButtonStyle}" x:Name="icMaximise" ToolTip="Maximise" shell:WindowChrome.IsHitTestVisibleInChrome="True" Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                      <Frame Focusable="False" x:Name="btnMaximise" Template="{DynamicResource icMaximise}"/>
                    </Button>
                    <Button Focusable="False" Style="{DynamicResource WindowButtonStyle}" x:Name="icRestore" ToolTip="Restore Down" Visibility="Collapsed" shell:WindowChrome.IsHitTestVisibleInChrome="True" Command="{x:Static shell:SystemCommands.RestoreWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                      <Frame Focusable="False" x:Name="Restore" Template="{DynamicResource icRestore}" shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
                    </Button>
                    <Button Focusable="False" Style="{DynamicResource WindowButtonStyle}" x:Name="btnClose" ToolTip="Close" shell:WindowChrome.IsHitTestVisibleInChrome="True" Command="{x:Static shell:SystemCommands.CloseWindowCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}">
                      <Frame Focusable="False" Template="{DynamicResource icClose}"/>
                    </Button>
                  </StackPanel>
								<Ellipse Style="{DynamicResource WindowHeaderIconBackgroundStyle}"/>
								<DockPanel Grid.ColumnSpan="2">
									<Frame Focusable="False" Template="{DynamicResource icDocument}" Width="16" Height="16"/>
									<TextBlock x:Name="lblTitle" Style="{DynamicResource WindowHeaderTextStyle}" Text="MDM Sample Admin Tool"/>
									<!--Menu here if required-->
								</DockPanel>
							</Grid>
						</Grid>
					</Grid>
					
					
			    	</Border>
			   		<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized" >
			              	<Setter Property="Visibility" TargetName="icRestore" Value="Visible"/>
			              	<Setter Property="Visibility" TargetName="icMaximise" Value="Collapsed"/>
			           	</Trigger>
					</ControlTemplate.Triggers>
		        </ControlTemplate>
		 	</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WindowHeaderIconBackgroundStyle" TargetType="{x:Type Ellipse}">
			<Setter Property="Visibility" Value="Hidden"/>
	</Style>
	
	<Style x:Key="WindowHeaderIconBufferBackgroundStyle" TargetType="{x:Type Rectangle}">
			<Setter Property="Visibility" Value="Hidden"/>
	</Style>
	<Style x:Key="WindowHeaderIconBufferBackgroundStyle2" TargetType="{x:Type Path}">
			<Setter Property="Visibility" Value="Hidden"/>
	</Style>
	<Style x:Key="WindowHeaderBackgroundStyle2" TargetType="{x:Type Rectangle}">
			<Setter Property="Fill" Value="{DynamicResource WindowHeaderBackgroundBrush}"/>
			<Setter Property="Margin" Value="0,1,0,0"/>
	</Style>
	
	
	
	<Style x:Key="WindowBackgroundStyle" TargetType="{x:Type Rectangle}">
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Setter Property="Fill" Value="{DynamicResource WindowGenericBackgroundBrush}"/>
			<Setter Property="RadiusX" Value="9.5"/>
			<Setter Property="RadiusY" Value="9.5"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Stroke" Value="{DynamicResource WindowGenericBorderBrush}"/>
		</Style>
		
		<Style x:Key="SearchCriteriaBackgroundStyle" TargetType="{x:Type Rectangle}">
			<Setter Property="Margin" Value="1,0,1,-15"/>
			<Setter Property="Stroke" Value="{DynamicResource SearchcriteriaBorderBrush}"/>
			<Setter Property="RadiusX" Value="7.5"/>
			<Setter Property="RadiusY" Value="7.5"/>
			<Setter Property="RadiusY" Value="9.5"/>
			<Setter Property="Fill" Value="{DynamicResource PaneBodyBackground}"/>
		</Style>
		<Style x:Key="SearchCriteriaContainerStyle" TargetType="{x:Type Grid}">
			<Setter Property="Margin" Value="10,3,10,6"/>
		</Style>

		<Style x:Key="WindowHeaderBackgroundStyle" TargetType="{x:Type Rectangle}">
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Height" Value="31"/>
			<Setter Property="Fill" Value="{DynamicResource WindowHeaderBackgroundBrush2}"/>
			<Setter Property="RadiusX" Value="7"/>
			<Setter Property="RadiusY" Value="7"/>
			<Setter Property="Margin" Value="1"/>
			<Setter Property="StrokeThickness" Value="1"/>
			<Setter Property="Stroke" Value="{DynamicResource WindowHeaderBorderBrush}"/>
		</Style>
		<Style x:Key="SectionHeaderContainerStyle" TargetType="{x:Type Grid}">
			<Setter Property="Margin" Value="2,0,0,0"/>
		</Style>
		<Style x:Key="SearchCriteriaTextBoxStyle" BasedOn="{StaticResource {x:Type TextBox}}" TargetType="{x:Type TextBox}">
	  		<Setter Property="Background" Value="White"/>
		</Style>
<!--Buttons-->    



	<!--Window Header Buttons-->
	<Style x:Key="WindowButtonStyle" BasedOn="{x:Null}" TargetType="{x:Type Button}">
		<Setter Property="Width" Value="21"/>
		<Setter Property="Height" Value="21"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Width="Auto" Height="Auto">
						<Grid Margin="0,-0.169,0,0.334">
							<Rectangle x:Name="OuterBorder" Stroke="{x:Null}" RadiusX="0" RadiusY="0" Fill="#00E76263" RenderTransformOrigin="0.5,0.5" Margin="0,-0.001,0,0.335">
								<Rectangle.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="1" ScaleY="1"/>
										<SkewTransform AngleX="0" AngleY="0"/>
										<RotateTransform Angle="0"/>
										<TranslateTransform X="0" Y="0"/>
									</TransformGroup>
								</Rectangle.RenderTransform>
							</Rectangle>
							<Rectangle Fill="{x:Null}" x:Name="InnerBorder" Stroke="#01F0B5B5" RadiusX="0" RadiusY="0" OpacityMask="{x:Null}" Margin="1,1,1,1" StrokeThickness="1"/>
						</Grid>
						<ContentPresenter OpacityMask="#FF000000" Margin="5"/>
					</Grid>
					<ControlTemplate.Triggers>
					<Trigger Property="IsMouseOver" Value="True">
            			<Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderHoverBorderBrush}"/>
            			<Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderHoverBackgroundBrush}"/>
            			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderHoverBackgroundBrush}"/>
            			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderHoverBorderBrush}"/>
            		</Trigger>
            		<Trigger Property="IsPressed" Value="True">
            			<Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderPressedBorderBrush}"/>
            			<Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderPressedBackgroundBrush}"/>
            			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderPressedBorderBrush}"/>
            			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderPressedBackgroundBrush}"/>
            		</Trigger>
						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


    <LinearGradientBrush x:Key="MenuItemSelectionFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#34C5EBFF" Offset="0"/>
        <GradientStop Color="#3481D8FF" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="MenuItemPressedFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#28717070" Offset="0"/>
        <GradientStop Color="#50717070" Offset="0.75"/>
        <GradientStop Color="#90717070" Offset="1"/>
    </LinearGradientBrush>

    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

	
	<!--Main Window Menu Item Buttons-->
	
	<Style x:Key="MainMenuStyle" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundCriteriaBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
    </Style>
    <Style x:Key="MainMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid SnapsToDevicePixels="true" x:Name="grid">
                        <Rectangle x:Name="OuterBorder" RadiusX="0" RadiusY="0"/>
                        <Rectangle Margin="1" x:Name="InnerBorder" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="0" RadiusY="0"/>
                        <DockPanel Margin="4,0,4,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon" Height="19.333" Width="22" HorizontalAlignment="Center"/>
                            <Path Visibility="Collapsed" FlowDirection="LeftToRight" Margin="7,0,0,0" x:Name="GlyphPanel" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" />
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,3,0,3" ContentSource="Header" RecognizesAccessKey="True"/>
                        </DockPanel>
                        <Popup Focusable="false" AllowsTransparency="true" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-1" x:Name="PART_Popup">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                <ContentControl IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}" x:Name="SubMenuBorder">
                                    <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" CanContentScroll="true">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2" Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </ScrollViewer>
                                </ContentControl>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                			<Setter Property="Foreground" Value="#FF000000"/>
                			<Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderCheckedBorderBrush}"/>
                			<Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderCheckedBackgroundBrush}"/>
                			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderCheckedBackgroundBrush}"/>
                			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderCheckedBorderBrush}"/>
                		</Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Foreground" Value="#FF000000"/>
                            <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderHoverBorderBrush}"/>
                            <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderHoverBackgroundBrush}"/>
                            <Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderHoverBackgroundBrush}"/>
                            <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderHoverBorderBrush}"/>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Stroke" TargetName="InnerBorder" Value="#E0717070"/>
                            <Setter Property="Fill" TargetName="InnerBorder" Value="{StaticResource MenuItemPressedFill}"/>
                        </Trigger>
                        <Trigger Property="IsSubmenuOpen" Value="true">
                            <Setter Property="Foreground" Value="#FF000000"/>
                            <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderCheckedBorderBrush}"/>
                            <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderCheckedBackgroundBrush}"/>
                            <Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderCheckedBackgroundBrush}"/>
                            <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderCheckedBorderBrush}"/>
                        </Trigger>
						<Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="#FF000000"/>
                            <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderCheckedBorderBrush}"/>
                            <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource GenericButtonOuterBorderCheckedBackgroundBrush}"/>
                            <Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderCheckedBackgroundBrush}"/>
                            <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource GenericButtonInnerBorderCheckedBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="grid" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	
	<!--Search Criteria Menu Item Buttons-->
	<Style x:Key="MenuCriteriaStyle" TargetType="{x:Type Menu}">
		<Setter Property="Background" Value="{x:Null}"/> 
		<Setter Property="Foreground" Value="{DynamicResource ForegroundCriteriaBrush}"/>	
		<Setter Property="Width" Value="Auto"/>	
		<Setter Property="Padding" Value="0"/>	
		<Setter Property="Margin" Value="0"/>	
	</Style>
	<Style x:Key="MenuCriteriaContainerStyle" TargetType="{x:Type DockPanel}">
		<Setter Property="Margin" Value="0,0,5,0"/> 
	</Style>
	
	<Style x:Key="MenuItemCriteriaStyle" TargetType="{x:Type MenuItem}">
	 <Setter Property="Margin" Value="0"/>
	 <Setter Property="MaxWidth" Value="150"/>
	 <Setter Property="Height" Value="16"/>
	 <Setter Property="Padding" Value="0"/>
	 <Setter Property="IsChecked" Value="False"/>
	 <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
	 <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid SnapsToDevicePixels="true" x:Name="grid">
                        <Rectangle x:Name="OuterBorder" RadiusX="0" RadiusY="0"/>
                        <Rectangle Margin="1" x:Name="InnerBorder" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" RadiusX="0" RadiusY="0"/>
                        <DockPanel>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon" Height="19.333" Width="22"/>
                            <Path Visibility="Collapsed" FlowDirection="LeftToRight" Margin="10,0,10,0" x:Name="GlyphPanel" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" />
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" ContentSource="Header" RecognizesAccessKey="True"/>
                        </DockPanel>
                        <Popup Focusable="false" AllowsTransparency="true" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-1" x:Name="PART_Popup">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                <ContentControl IsTabStop="false" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}" x:Name="SubMenuBorder">
                                    <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}" CanContentScroll="true">
                                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2" Grid.IsSharedSizeScope="true" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
                                    </ScrollViewer>
                                </ContentControl>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                            <Setter Property="HorizontalAlignment" TargetName="Icon" Value="Right"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Foreground" Value="#FF000000"/>
                            <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource CriteriaButtonOuterBorderHoverBorderBrush}"/>
                            <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource CriteriaButtonOuterBorderHoverBackgroundBrush}"/>
                            <Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource CriteriaButtonInnerBorderHoverBackgroundBrush}"/>
                            <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource CriteriaButtonInnerBorderHoverBorderBrush}"/>

                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Stroke" TargetName="InnerBorder" Value="#E0717070"/>
                            <Setter Property="Fill" TargetName="InnerBorder" Value="{StaticResource MenuItemPressedFill}"/>
                        </Trigger>
                        <Trigger Property="IsSubmenuOpen" Value="true">
                            <Setter Property="Foreground" Value="#FF000000"/>
                            <Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource CriteriaButtonOuterBorderHoverBorderBrush}"/>
                            <Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource CriteriaButtonOuterBorderHoverBackgroundBrush}"/>
                            <Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource CriteriaButtonInnerBorderHoverBackgroundBrush}"/>
                            <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource CriteriaButtonInnerBorderHoverBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#FF9A9A9A"/>
                            <Setter Property="Fill" TargetName="GlyphPanel" Value="#848589"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>







	
	<!--Slider Header Buttons-->
	<Style x:Key="SliderContainerStyle" TargetType="{x:Type Grid}">
		<Setter Property="Margin" Value="5,10,7,10"/>
	</Style>
	<Style x:Key="SliderTrackStyle" TargetType="{x:Type Rectangle}">
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Width" Value="4"/>
		<Setter Property="Fill" Value="{DynamicResource VerticalSliderTrackBackgroundBrush}"/>
		<Setter Property="Stroke" Value="{DynamicResource VerticalSliderTrackBorderBrush}"/>
	</Style>
	
	<Style x:Key="SliderBackgroundStyle" TargetType="{x:Type Border}">
		<Setter Property="CornerRadius" Value="7.5"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Margin" Value="-20,0,0,0"/>
		<Setter Property="Background" Value="{DynamicResource VerticalSliderPaneBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource VerticalSliderPaneBorderBrush}"/>
	</Style>
	<Style x:Key="SectionBackgroundStyle" TargetType="{x:Type Border}">
		<Setter Property="CornerRadius" Value="7.5"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="{DynamicResource BodysectionBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BodysectionBorderBrush}"/>
	</Style>
	
	
	
	<Style x:Key="SliderButtonStyle" TargetType="{x:Type Button}">
	
		<Setter Property="BorderThickness" Value="1,8,1,8"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Height" Value="15"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Width" Value="15"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
        						<Ellipse Fill="{DynamicResource SliderButtonOuterBorderCheckedBackgroundBrush}" Stroke="{DynamicResource SliderButtonOuterBorderCheckedBorderBrush}" x:Name="OuterBorder"/>
        						<Ellipse Margin="0.875,0.875,0.875,0.875" Stroke="{DynamicResource SliderButtonInnerBorderCheckedBorderBrush}" x:Name="InnerBorder" Fill="{DynamicResource SliderButtonInnerBorderCheckedBackgroundBrush}"/>
        						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
        					</Grid>
					<ControlTemplate.Triggers>
					<Trigger Property="IsDefaulted" Value="True">
            			<Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource SliderButtonOuterBorderHoverBorderBrush}"/>
            			<Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource SliderButtonOuterBorderHoverBackgroundBrush}"/>
            			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource SliderButtonInnerBorderHoverBackgroundBrush}"/>
            			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource SliderButtonInnerBorderHoverBorderBrush}"/>
            		</Trigger>
					<Trigger Property="IsMouseOver" Value="True">
            			<Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource SliderButtonOuterBorderHoverBorderBrush}"/>
            			<Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource SliderButtonOuterBorderHoverBackgroundBrush}"/>
            			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource SliderButtonInnerBorderHoverBackgroundBrush}"/>
            			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource SliderButtonInnerBorderHoverBorderBrush}"/>
            		</Trigger>
            		<Trigger Property="IsPressed" Value="True">
            			<Setter Property="Stroke" TargetName="OuterBorder" Value="{DynamicResource SliderButtonOuterBorderPressedBorderBrush}"/>
            			<Setter Property="Fill" TargetName="OuterBorder" Value="{DynamicResource SliderButtonOuterBorderPressedBackgroundBrush}"/>
            			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource SliderButtonInnerBorderPressedBorderBrush}"/>
            			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource SliderButtonInnerBorderPressedBackgroundBrush}"/>
            		</Trigger>
						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	
	<!--Zoom Vertical Slider-->
    <LinearGradientBrush x:Key="VerticalSliderPaneBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="{DynamicResource PanelBackgroundBrush1}" Offset="0"/>
    	<GradientStop Color="{DynamicResource PanelBackgroundBrush2}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderPaneBorderBrush" EndPoint="0.99,0.267" StartPoint="0.955,-0.015">
    	<GradientStop Color="{DynamicResource PanelBorderBrush1}" Offset="0"/>
    	<GradientStop Color="{DynamicResource PanelBorderBrush2}" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderTrackBackgroundBrush" EndPoint="1.048,0.465" StartPoint="0.048,0.465">
    	<GradientStop Color="#ff7d868a" Offset="0"/>
    	<GradientStop Color="#ff8f989d" Offset="0.3"/>
    	<GradientStop Color="#ffd9dee0" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderTrackBorderBrush" EndPoint="0.048,0.072" StartPoint="1.714,1.129">
    	<GradientStop Color="#ff777777" Offset="0"/>
    	<GradientStop Color="#ff777777" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderDefaultOuterBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="#ff97a1a5" Offset="0"/>
    	<GradientStop Color="#ff97a1a5" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderDefaultInnerBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="#FFA74B4B" Offset="0"/>
    	<GradientStop Color="#FFD79B9E" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderDefaultOuterBorderBrush" EndPoint="0.048,0.072" StartPoint="1.714,1.129">
    	<GradientStop Color="#FF9F5255" Offset="0"/>
    	<GradientStop Color="#FF934646" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="VerticalSliderDefaultInnerBorderBrush" Color="#FFEEBABA"/>
    <LinearGradientBrush x:Key="VerticalSliderMouseoverOuterBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="#FFD39496" Offset="0"/>
    	<GradientStop Color="#FFAD5556" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderMouseoverOuterBorderBrush" EndPoint="0.048,0.072" StartPoint="1.714,1.129">
    	<GradientStop Color="#FF9F5255" Offset="0"/>
    	<GradientStop Color="#FF934646" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderMouseoverInnerBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="#FFB14242" Offset="0"/>
    	<GradientStop Color="#FFE2B6B9" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="VerticalSliderMouseoverInnerBorderBrush" Color="#FFF7E6E6"/>
    <LinearGradientBrush x:Key="VerticalSliderPressedInnerBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="#FFA74B4B" Offset="0"/>
    	<GradientStop Color="#FFDC6C71" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="VerticalSliderPressedInnerBorderBrush" Color="#FFF0D4D4"/>
    <LinearGradientBrush x:Key="VerticalSliderPressedOuterBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="#FFD39496" Offset="0"/>
    	<GradientStop Color="#FFAD5556" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerticalSliderPressedOuterBorderBrush" EndPoint="0.048,0.072" StartPoint="1.714,1.129">
    	<GradientStop Color="#FF9F5255" Offset="0"/>
    	<GradientStop Color="#FF934646" Offset="1"/>
    </LinearGradientBrush>
	
	
	
	<!--Status Bar-->
    <SolidColorBrush x:Key="StatustextForegroundBrush" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="SplitterBackgroundBrush" Color="#FF515151"/>
    <LinearGradientBrush x:Key="TogglebuttonMouseoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="#FFC22626" Offset="0"/>
    	<GradientStop Color="#FFDC6D6E" Offset="1"/>
    </LinearGradientBrush>
	

	<!--Slider Buttons-->
		<!--Slider Button Brushes-->
    <SolidColorBrush x:Key="SliderButtonOuterBorderDefaultBackgroundBrush" Color="{DynamicResource PanelButtonOuterBorderDefaultBackgroundBrush}"/>
    <SolidColorBrush x:Key="SliderButtonOuterBorderDefaultBorderBrush" Color="{DynamicResource PanelButtonOuterBorderDefaultBorderBrush}"/>
	<SolidColorBrush x:Key="SliderButtonInnerBorderDefaultBackgroundBrush" Color="{DynamicResource PanelButtonInnerBorderDefaultBackgroundBrush}"/>
    <SolidColorBrush x:Key="SliderButtonInnerBorderDefaultBorderBrush" Color="{DynamicResource PanelButtonInnerBorderDefaultBorderBrush}"/>
	<!--Hover Button Brushes-->
    <SolidColorBrush x:Key="SliderButtonOuterBorderHoverBorderBrush" Color="{DynamicResource PanelButtonOuterBorderHoverBorderBrush}"/>
	<LinearGradientBrush x:Key="SliderButtonOuterBorderHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="{DynamicResource PanelButtonOuterBorderHoverBackgroundBrush1}" Offset="0"/>
    	<GradientStop Color="{DynamicResource PanelButtonOuterBorderHoverBackgroundBrush2}" Offset="1"/>
    </LinearGradientBrush>
	<SolidColorBrush x:Key="SliderButtonInnerBorderHoverBorderBrush" Color="{DynamicResource PanelButtonInnerBorderHoverBorderBrush}"/>
	<RadialGradientBrush x:Key="SliderButtonInnerBorderHoverBackgroundBrush">
    	<RadialGradientBrush.RelativeTransform>
    		<TransformGroup>
    			<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="2"/>
    			<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
    			<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
    			<TranslateTransform X="0" Y="0.8"/>
    		</TransformGroup>
    	</RadialGradientBrush.RelativeTransform>
    	<GradientStop Color="{DynamicResource PanelButtonInnerBorderHoverBackgroundBrush1}" Offset="1"/>
    	<GradientStop Color="{DynamicResource PanelButtonInnerBorderHoverBackgroundBrush2}" Offset="0"/>
    </RadialGradientBrush>
	
		<!--Pressed Button Brushes-->
	<LinearGradientBrush x:Key="SliderButtonOuterBorderPressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
	    <GradientStop Color="{DynamicResource PanelButtonOuterBorderPressedBackgroundBrush1}" Offset="0"/>
		<GradientStop Color="{DynamicResource PanelButtonOuterBorderPressedBackgroundBrush2}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="SliderButtonOuterBorderPressedBorderBrush" Color="{DynamicResource PanelButtonOuterBorderPressedBorderBrush}"/>
    <SolidColorBrush x:Key="SliderButtonInnerBorderPressedBackgroundBrush" Color="{DynamicResource PanelButtonInnerBorderPressedBackgroundBrush}"/>
    <SolidColorBrush x:Key="SliderButtonInnerBorderPressedBorderBrush" Color="{DynamicResource PanelButtonInnerBorderPressedBorderBrush}"/>
	
    	<!--Checked Button Brushes-->
	<LinearGradientBrush x:Key="SliderButtonOuterBorderCheckedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="{DynamicResource PanelButtonOuterBorderCheckedBackgroundBrush1}" Offset="0"/>
		<GradientStop Color="{DynamicResource PanelButtonOuterBorderCheckedBackgroundBrush2}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="SliderButtonOuterBorderCheckedBorderBrush" Color="{DynamicResource PanelButtonOuterBorderCheckedBorderBrush}"/>
    <SolidColorBrush x:Key="SliderButtonInnerBorderCheckedBackgroundBrush" Color="{DynamicResource PanelButtonInnerBorderCheckedBackgroundBrush}"/>
    <SolidColorBrush x:Key="SliderButtonInnerBorderCheckedBorderBrush" Color="{DynamicResource PanelButtonInnerBorderCheckedBorderBrush}"/>
   
   
   <!--Generic Buttons-->
   
		<!--Default Button Brushes-->
    <SolidColorBrush x:Key="GenericButtonOuterBorderDefaultBackgroundBrush" Color="{DynamicResource ButtonOuterBorderDefaultBackgroundBrush}"/>
    <SolidColorBrush x:Key="GenericButtonOuterBorderDefaultBorderBrush" Color="{DynamicResource ButtonOuterBorderDefaultBorderBrush}"/>
	<SolidColorBrush x:Key="GenericButtonInnerBorderDefaultBackgroundBrush" Color="{DynamicResource ButtonInnerBorderDefaultBackgroundBrush}"/>
    <SolidColorBrush x:Key="GenericButtonInnerBorderDefaultBorderBrush" Color="{DynamicResource ButtonInnerBorderDefaultBorderBrush}"/>
	
		<!--Hover Button Brushes-->
    <SolidColorBrush x:Key="GenericButtonOuterBorderHoverBorderBrush" Color="{DynamicResource ButtonOuterBorderHoverBorderBrush}"/>
	<LinearGradientBrush x:Key="GenericButtonOuterBorderHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="{DynamicResource ButtonOuterBorderHoverBackgroundBrush1}" Offset="0"/>
		<GradientStop Color="{DynamicResource ButtonOuterBorderHoverBackgroundBrush2}" Offset="0.5"/>
		<GradientStop Color="{DynamicResource ButtonOuterBorderHoverBackgroundBrush3}" Offset="0.5"/>
    	<GradientStop Color="{DynamicResource ButtonOuterBorderHoverBackgroundBrush4}" Offset="1"/>
    </LinearGradientBrush>
	<SolidColorBrush x:Key="GenericButtonInnerBorderHoverBorderBrush" Color="{DynamicResource ButtonInnerBorderHoverBorderBrush}"/>
	<RadialGradientBrush x:Key="GenericButtonInnerBorderHoverBackgroundBrush">
    	<RadialGradientBrush.RelativeTransform>
    		<TransformGroup>
    			<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="2"/>
    			<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
    			<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
    			<TranslateTransform X="0" Y="0.8"/>
    		</TransformGroup>
    	</RadialGradientBrush.RelativeTransform>
    	<GradientStop Color="{DynamicResource ButtonInnerBorderHoverBackgroundBrush1}" Offset="1"/>
    	<GradientStop Color="{DynamicResource ButtonInnerBorderHoverBackgroundBrush2}" Offset="0"/>
    </RadialGradientBrush>
	
		<!--Pressed Button Brushes-->
		<LinearGradientBrush x:Key="GenericButtonOuterBorderPressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="{DynamicResource ButtonOuterBorderPressedBackgroundBrush1}" Offset="0"/>
		<GradientStop Color="{DynamicResource ButtonOuterBorderPressedBackgroundBrush2}" Offset="0.5"/>
		<GradientStop Color="{DynamicResource ButtonOuterBorderPressedBackgroundBrush3}" Offset="0.5"/>
    	<GradientStop Color="{DynamicResource ButtonOuterBorderPressedBackgroundBrush4}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GenericButtonOuterBorderPressedBorderBrush" Color="{DynamicResource ButtonOuterBorderPressedBorderBrush}"/>
    <SolidColorBrush x:Key="GenericButtonInnerBorderPressedBackgroundBrush" Color="{DynamicResource ButtonInnerBorderPressedBackgroundBrush}"/>
    <SolidColorBrush x:Key="GenericButtonInnerBorderPressedBorderBrush" Color="{DynamicResource ButtonInnerBorderPressedBorderBrush}"/>
	
    	<!--Checked Button Brushes-->
	<LinearGradientBrush x:Key="GenericButtonOuterBorderCheckedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="#FF001523" Offset="0"/>
    	<GradientStop Color="#FF001523" Offset="0.495"/>
    	<GradientStop Color="#FF889BA8" Offset="0.5"/>
    	<GradientStop Color="#FF215D85" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GenericButtonOuterBorderCheckedBorderBrush" Color="{DynamicResource ButtonOuterBorderCheckedBorderBrush}"/>
    <SolidColorBrush x:Key="GenericButtonInnerBorderCheckedBackgroundBrush" Color="{DynamicResource ButtonInnerBorderCheckedBackgroundBrush}"/>
    <SolidColorBrush x:Key="GenericButtonInnerBorderCheckedBorderBrush" Color="{DynamicResource ButtonInnerBorderCheckedBorderBrush}"/>
   
    <!--Button Foreground Brushes-->
    <SolidColorBrush x:Key="GenericbuttonForegroundBrush" Color="#ffffffff"/>
	<SolidColorBrush x:Key="PanelbuttonForegroundBrush" Color="#ff354253"/>
	
	
	
	 <!--Criteria Buttons-->
   
		<!--Default Button Brushes-->
    <SolidColorBrush x:Key="CriteriaButtonOuterBorderDefaultBackgroundBrush" Color="{DynamicResource PanelButtonOuterBorderDefaultBackgroundBrush}"/>
    <SolidColorBrush x:Key="CriteriaButtonOuterBorderDefaultBorderBrush" Color="{DynamicResource PanelButtonOuterBorderDefaultBorderBrush}"/>
	<SolidColorBrush x:Key="CriteriaButtonInnerBorderDefaultBackgroundBrush" Color="{DynamicResource PanelButtonInnerBorderDefaultBackgroundBrush}"/>
    <SolidColorBrush x:Key="CriteriaButtonInnerBorderDefaultBorderBrush" Color="{DynamicResource PanelButtonInnerBorderDefaultBorderBrush}"/>
	
		<!--Hover Button Brushes-->
    <SolidColorBrush x:Key="CriteriaButtonOuterBorderHoverBorderBrush" Color="{DynamicResource PanelButtonOuterBorderHoverBorderBrush}"/>
	<LinearGradientBrush x:Key="CriteriaButtonOuterBorderHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="{DynamicResource PanelButtonOuterBorderHoverBackgroundBrush1}" Offset="0"/>
		<GradientStop Color="{DynamicResource PanelButtonOuterBorderHoverBackgroundBrush2}" Offset="1"/>
    </LinearGradientBrush>
	<SolidColorBrush x:Key="CriteriaButtonInnerBorderHoverBorderBrush" Color="{DynamicResource PanelButtonInnerBorderHoverBorderBrush}"/>
	<RadialGradientBrush x:Key="CriteriaButtonInnerBorderHoverBackgroundBrush">
    	<RadialGradientBrush.RelativeTransform>
    		<TransformGroup>
    			<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="2"/>
    			<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
    			<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
    			<TranslateTransform X="0" Y="0.8"/>
    		</TransformGroup>
    	</RadialGradientBrush.RelativeTransform>
    	<GradientStop Color="{DynamicResource PanelButtonInnerBorderHoverBackgroundBrush1}" Offset="1"/>
    	<GradientStop Color="{DynamicResource PanelButtonInnerBorderHoverBackgroundBrush2}" Offset="0"/>
    </RadialGradientBrush>
	
		<!--Pressed Button Brushes-->
		<LinearGradientBrush x:Key="CriteriaButtonOuterBorderPressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="{DynamicResource PanelButtonOuterBorderPressedBackgroundBrush1}" Offset="0"/>
		<GradientStop Color="{DynamicResource PanelButtonOuterBorderPressedBackgroundBrush2}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CriteriaButtonOuterBorderPressedBorderBrush" Color="{DynamicResource PanelButtonOuterBorderPressedBorderBrush}"/>
    <SolidColorBrush x:Key="CriteriaButtonInnerBorderPressedBackgroundBrush" Color="{DynamicResource PanelButtonInnerBorderPressedBackgroundBrush}"/>
    <SolidColorBrush x:Key="CriteriaButtonInnerBorderPressedBorderBrush" Color="{DynamicResource PanelButtonInnerBorderPressedBorderBrush}"/>
	
    
    <!--Button Foreground Brushes-->
    <SolidColorBrush x:Key="CriteriabuttonForegroundBrush" Color="#ffffffff"/>
	<!--<SolidColorBrush x:Key="PanelbuttonForegroundBrush" Color="#ff354253"/>-->
	
	
	
	
	
	
	
	
	
	
	
	
	<!--Toggle Buttons-->
		<!--Default Button Brushes-->
    <SolidColorBrush x:Key="ToggleButtonOuterBorderDefaultBackgroundBrush" Color="{DynamicResource ButtonOuterBorderDefaultBackgroundBrush}"/>
    <SolidColorBrush x:Key="ToggleButtonOuterBorderDefaultBorderBrush" Color="{DynamicResource ButtonOuterBorderDefaultBorderBrush}"/>
	<SolidColorBrush x:Key="ToggleButtonInnerBorderDefaultBackgroundBrush" Color="{DynamicResource ButtonInnerBorderDefaultBackgroundBrush}"/>
    <SolidColorBrush x:Key="ToggleButtonInnerBorderDefaultBorderBrush" Color="{DynamicResource ButtonInnerBorderDefaultBorderBrush}"/>
	
		<!--Hover Button Brushes-->
    <SolidColorBrush x:Key="ToggleButtonOuterBorderHoverBorderBrush" Color="{DynamicResource ButtonOuterBorderHoverBorderBrush}"/>
	<LinearGradientBrush x:Key="ToggleButtonOuterBorderHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="{DynamicResource ButtonOuterBorderHoverBackgroundBrush1}" Offset="0"/>
		<GradientStop Color="{DynamicResource ButtonOuterBorderHoverBackgroundBrush2}" Offset="0.5"/>
		<GradientStop Color="{DynamicResource ButtonOuterBorderHoverBackgroundBrush3}" Offset="0.5"/>
    	<GradientStop Color="{DynamicResource ButtonOuterBorderHoverBackgroundBrush4}" Offset="1"/>
    </LinearGradientBrush>
	<SolidColorBrush x:Key="ToggleButtonInnerBorderHoverBorderBrush" Color="{DynamicResource ButtonInnerBorderHoverBorderBrush}"/>
	<RadialGradientBrush x:Key="ToggleButtonInnerBorderHoverBackgroundBrush">
    	<RadialGradientBrush.RelativeTransform>
    		<TransformGroup>
    			<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1" ScaleY="2"/>
    			<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
    			<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
    			<TranslateTransform X="0" Y="0.8"/>
    		</TransformGroup>
    	</RadialGradientBrush.RelativeTransform>
    	<GradientStop Color="{DynamicResource ButtonInnerBorderHoverBackgroundBrush1}" Offset="1"/>
    	<GradientStop Color="{DynamicResource ButtonInnerBorderHoverBackgroundBrush2}" Offset="0"/>
    </RadialGradientBrush>
	
		<!--Pressed Button Brushes-->
		<LinearGradientBrush x:Key="ToggleButtonOuterBorderPressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="{DynamicResource ButtonOuterBorderPressedBackgroundBrush1}" Offset="0"/>
		<GradientStop Color="{DynamicResource ButtonOuterBorderPressedBackgroundBrush2}" Offset="0.5"/>
		<GradientStop Color="{DynamicResource ButtonOuterBorderPressedBackgroundBrush3}" Offset="0.5"/>
    	<GradientStop Color="{DynamicResource ButtonOuterBorderPressedBackgroundBrush4}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToggleButtonOuterBorderPressedBorderBrush" Color="{DynamicResource ButtonOuterBorderPressedBorderBrush}"/>
    <SolidColorBrush x:Key="ToggleButtonInnerBorderPressedBackgroundBrush" Color="{DynamicResource ButtonInnerBorderPressedBackgroundBrush}"/>
    <SolidColorBrush x:Key="ToggleButtonInnerBorderPressedBorderBrush" Color="{DynamicResource ButtonInnerBorderPressedBorderBrush}"/>
	
    	<!--Checked Button Brushes-->
	<LinearGradientBrush x:Key="ToggleButtonOuterBorderCheckedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    	<GradientStop Color="{DynamicResource ButtonOuterBorderCheckedBackgroundBrush1}" Offset="0"/>
		<GradientStop Color="{DynamicResource ButtonOuterBorderCheckedBackgroundBrush2}" Offset="0.5"/>
		<GradientStop Color="{DynamicResource ButtonOuterBorderCheckedBackgroundBrush3}" Offset="0.5"/>
    	<GradientStop Color="{DynamicResource ButtonOuterBorderCheckedBackgroundBrush4}" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToggleButtonOuterBorderCheckedBorderBrush" Color="{DynamicResource ButtonOuterBorderCheckedBorderBrush}"/>
    <SolidColorBrush x:Key="ToggleButtonInnerBorderCheckedBackgroundBrush" Color="{DynamicResource ButtonInnerBorderCheckedBackgroundBrush}"/>
    <SolidColorBrush x:Key="ToggleButtonInnerBorderCheckedBorderBrush" Color="{DynamicResource ButtonInnerBorderCheckedBorderBrush}"/>
   
    <!--Button Foreground Brushes-->
    <SolidColorBrush x:Key="TogglebuttonForegroundBrush" Color="#ffffffff"/>
	
	<Style x:Key="btnKeys" BasedOn="{x:Null}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="2,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource TogglebuttonForegroundBrush}"/>
        <Setter Property="Template">
       	  <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
              <Grid>
			  	<Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="OuterBorder" Padding="10,0,0,0" CornerRadius="0,0,0,0" BorderBrush="#00770000" BorderThickness="1,1,1,1" SnapsToDevicePixels="True" Height="Auto" Background="#00000000"/>
			  	<Rectangle x:Name="InnerBorder" Margin="1,1,1,1"/>
				<TextBlock Text="{TemplateBinding Content}"  HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="30,0,0,0"/>
              	<ContentPresenter x:Name="contentPresenter" Visibility="Hidden"/>
              </Grid>
			  
              <ControlTemplate.Triggers>
			  	<!--Default Button-->
            		<Trigger Property="IsChecked" Value="False">
						<Setter Property="Foreground" Value="#fff"/>
            			<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderDefaultBackgroundBrush}"/>
            			<Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderDefaultBorderBrush}"/>
            			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderDefaultBackgroundBrush}"/>
            			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderDefaultBorderBrush}"/>
            		</Trigger>
				<!--Checked Button-->
            		<Trigger Property="IsEnabled" Value="true">
            			<Setter Property="Foreground" Value="#fff"/>
            		</Trigger>
				<!--Hovered Button-->
            		<Trigger Property="IsMouseOver" Value="True">
						<Setter Property="Foreground" Value="#fff"/>
            			<Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderHoverBorderBrush}"/>
            			<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderHoverBackgroundBrush}"/>
            			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderHoverBackgroundBrush}"/>
            			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderHoverBorderBrush}"/>
            		</Trigger>
				<!--Checked Button-->
            		<Trigger Property="IsChecked" Value="true">
            			<Setter Property="Foreground" Value="#fff"/>
            			<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderCheckedBackgroundBrush}"/>
            			<Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderCheckedBorderBrush}"/>
            			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderCheckedBackgroundBrush}"/>
            			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderCheckedBorderBrush}"/>
            		</Trigger>
				<!--Pressed Button-->
            		<Trigger Property="IsPressed" Value="True">
						<Setter Property="Foreground" Value="#fff"/>
            			<Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderPressedBorderBrush}"/>
            			<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderPressedBackgroundBrush}"/>
            			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderPressedBorderBrush}"/>
            			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderPressedBackgroundBrush}"/>
            		</Trigger>
            	<!--Hover Checked Button-->
            		<MultiTrigger>
            			<MultiTrigger.Conditions>
            				<Condition Property="IsMouseOver" Value="True"/>
            				<Condition Property="IsChecked" Value="True"/>
            			</MultiTrigger.Conditions>
            			<Setter Property="Foreground" Value="#fff"/>
            			<Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderCheckedBorderBrush}"/>
            			<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderHoverBackgroundBrush}"/>
            			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderHoverBackgroundBrush}"/>
            			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderHoverBorderBrush}"/>
            		
            		</MultiTrigger>
				<!--Pressed Checked Button-->
					<MultiTrigger>
            			<MultiTrigger.Conditions>
            				<Condition Property="IsPressed" Value="True"/>
            				<Condition Property="IsChecked" Value="True"/>
            			</MultiTrigger.Conditions>
            			<Setter Property="Foreground" Value="#fff"/>
            			<Setter Property="BorderBrush" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderCheckedBorderBrush}"/>
            			<Setter Property="Background" TargetName="OuterBorder" Value="{DynamicResource ToggleButtonOuterBorderPressedBackgroundBrush}"/>
            			<Setter Property="Fill" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderPressedBackgroundBrush}"/>
            			<Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource ToggleButtonInnerBorderCheckedBorderBrush}"/>
            		
            		</MultiTrigger>
            	</ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
        	</Style>
			
			
			
    <!--text-->
	<SolidColorBrush x:Key="WindowHeaderTextForegroundBrush" Color="{DynamicResource WindowForegroundBrush}"/>
	<SolidColorBrush x:Key="WindowHeaderTextShadowBrush" Color="#ff000000"/>
	<LinearGradientBrush x:Key="WindowHeaderBackgroundBrush1">
		<GradientStop Color="#00000000"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="WindowHeaderBackgroundBrush2" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Color="#4CFFFFFF" Offset="0.004"/>
		<GradientStop Color="Transparent" Offset="0.929"/>
		<GradientStop Color="#00000000" Offset="0.94"/>
		<GradientStop Color="#00000000" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="MenuBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F6F6F6" Offset="0.25"/>
		<GradientStop Color="#EAE8E8" Offset="0.25"/>
		<GradientStop Color="#DCD9D9" Offset="0.8"/>
		<GradientStop Color="White" Offset="1"/>
	</LinearGradientBrush>
	<Style x:Key="MenuItemHeaderTextBlockStyle" BasedOn="{x:Null}" TargetType="{x:Type TextBlock}">
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}}"/>
		<Setter Property="Foreground" Value="{DynamicResource ForegroundCriteriaBrush}"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
	</Style>
	<Style x:Key="MenuItemHeaderLabelStyle" BasedOn="{x:Null}" TargetType="{x:Type Label}">
		<Setter Property="Margin" Value="0"/>
        <Setter Property="FontSize" Value="12"/>
		<Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}}"/>
		<Setter Property="Foreground" Value="{DynamicResource ForegroundCriteriaBrush}"/>
	</Style>
	<DataTemplate x:Key="MenuItemHeaderCriteriaStyle">
		<Grid HorizontalAlignment="Stretch" Margin="3,0">
			<TextBlock Text="{TemplateBinding Content}" Style="{DynamicResource MenuItemHeaderTextBlockStyle}" />
			<Path Grid.Column="1" Width="7.406" Height="3.745" Fill="{DynamicResource ForegroundCriteriaBrush}" Stretch="Fill" Stroke="{x:Null}" Data="M-33,3.696928 L-25.725869,10.971059 -18.176402,3.5588535 z" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
							  
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition Width="14.418"/>
			</Grid.ColumnDefinitions>
         		  
   		</Grid>
	</DataTemplate>
	
	<ItemsPanelTemplate x:Key="MenuItemsPanelTemplate">
		<StackPanel IsItemsHost="True" Margin="3"/>
	</ItemsPanelTemplate>
	<Style x:Key="GridSplitterPreviewStyle">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Fill="#80000000"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type GridSplitter}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="#0063A2D6"/>
		<Setter Property="BorderThickness" Value="0,1,0,0"/>
		<Setter Property="Foreground" Value="Transparent"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="0,2,0,24"/>
	</Style>

	<Style x:Key="ContentGridSplitterStyle" TargetType="{x:Type GridSplitter}">
		<Setter Property="ResizeBehavior" Value="BasedOnAlignment"/>
		<Setter Property="Background" Value="#FFFFFFFF"/>
		<Setter Property="BorderBrush" Value="#FF688CAF"/>
		<Setter Property="BorderThickness" Value="1,1,0,0"/>
		<Setter Property="Foreground" Value="#00FFFFFF"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="ResizeDirection" Value="Auto"/>
		<Setter Property="ShowsPreview" Value="False"/>
		<Setter Property="Margin" Value="0,0,1,1"/>
	</Style>
	<Style x:Key="FooterGridSplitterStyle" TargetType="{x:Type GridSplitter}">
		<Setter Property="Background" Value="{DynamicResource SplitterBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="#0063A2D6"/>
		<Setter Property="BorderThickness" Value="1,0,1,0"/>
		<Setter Property="Foreground" Value="#00FFFFFF"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="Height" Value="15"/>
		<Setter Property="Width" Value="4"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Margin" Value="0.8,3.4,0,0"/>
	</Style>
	<Style x:Key="SplashPageHelpTextStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="Foreground" Value="#FF749FEF"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
	</Style>
	<Style x:Key="SmallIconStyle" TargetType="{x:Type Control}">
		<Setter Property="Width" Value="16"/>
		<Setter Property="Height" Value="16"/>
	</Style>
	<Style x:Key="MediumIconStyle" TargetType="{x:Type Control}">
		<Setter Property="Width" Value="24"/>
		<Setter Property="Height" Value="24"/>
	</Style>
	<Style x:Key="LargeIconStyle" TargetType="{x:Type Control}">
		<Setter Property="Width" Value="32"/>
		<Setter Property="Height" Value="32"/>
	</Style>
	<Style x:Key="ExtraLargeIconStyle" TargetType="{x:Type Control}">
		<Setter Property="Width" Value="48"/>
		<Setter Property="Height" Value="48"/>
	</Style>
	
	<!--Splash Screen Styles-->
	<Style x:Key="SplashTextStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="Height" Value="auto"/>
	</Style>
	<Style x:Key="SplashHeaderStyle" BasedOn="{StaticResource SplashTextStyle}" TargetType="{x:Type TextBlock}">
		<Setter Property="FontSize" Value="13"/>
	</Style>
	<Style x:Key="SplashHeaderVersionStyle" BasedOn="{StaticResource SplashTextStyle}" TargetType="{x:Type TextBlock}">
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="Opacity" Value="0.45"/>
	</Style>
	<Style x:Key="SplashBodyStyle" BasedOn="{StaticResource SplashTextStyle}" TargetType="{x:Type TextBlock}">
		<Setter Property="FontSize" Value="9"/>
	</Style>
	<Style x:Key="AboutCharTitleStyle" BasedOn="{StaticResource SplashTextStyle}" TargetType="{x:Type TextBlock}">
		<Setter Property="FontSize" Value="9"/>
		<Setter Property="Height" Value="11"/>
		<Setter Property="Padding" Value="0,0,5,0"/>
		<Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}}"/>
		<Setter Property="Height" Value="11"/>
	</Style>
	<Style x:Key="AboutCharStyle" BasedOn="{StaticResource SplashTextStyle}" TargetType="{x:Type TextBlock}">
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="Height" Value="11"/>
		<Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}}"/>
		<Setter Property="FontSize" Value="9"/>
	</Style>
	<Style x:Key="SplashFooterStyle" BasedOn="{StaticResource SplashTextStyle}" TargetType="{x:Type TextBlock}">
		<Setter Property="FontSize" Value="8"/>
	</Style>
	<Style x:Key="SplashLoadingTextStyle" BasedOn="{StaticResource SplashTextStyle}" TargetType="{x:Type TextBlock}">
		<Setter Property="FontSize" Value="9"/>
		<Setter Property="Opacity" Value="0.5"/>
	</Style>
	<LinearGradientBrush x:Key="ProgressBarForeground" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FFE8FFD8" Offset="0"/>
		<GradientStop Color="#FF46FF00" Offset="0.982"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ProgressBarBackground" Color="#ffffffff"/>
	<Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{StaticResource ProgressBarForeground}"/>
		<Setter Property="Opacity" Value="0.79"/>
		<Setter Property="Height" Value="12"/>
	</Style>
	<Style x:Key="Splashlogo" TargetType="{x:Type Control}">
		<Setter Property="Width" Value="48"/>
		<Setter Property="Height" Value="48"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
	</Style>
<!--2nd-->









	
	
		<Style x:Key="GenericLabel" TargetType="{x:Type TextBlock}">            
  		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
  		<Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}}"/>  
  		<Setter Property="TextWrapping" Value="Nowrap"/> 
		<Setter Property="Foreground" Value="#dd2a3036"/> 
		<Setter Property="Padding" Value="0,3,0,0"/> 
		<Setter Property="Margin" Value="2"/>
		<Setter Property="FontSize" Value="12"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Height" Value="21"/>
	</Style>
	<Style x:Key="RequiredLabel" BasedOn="{StaticResource GenericLabel}" TargetType="{x:Type TextBlock}"> 
		<Setter Property="FontWeight" Value="Bold"/>
	</Style>
	<Style x:Key="ReadOnlyLabel" BasedOn="{StaticResource GenericLabel}" TargetType="{x:Type TextBlock}"> 
        <Setter Property="Foreground" Value="DarkGray"/>
	</Style>
	<Style x:Key="GenericTextBox" BasedOn="{StaticResource GenericLabel}" TargetType="{x:Type TextBlock}"> 
		<Setter Property="Foreground" Value="#FF000000"/>
	</Style>
	<Style x:Key="TabLabel" BasedOn="{StaticResource GenericLabel}" TargetType="{x:Type TextBlock}">  
		<Setter Property="Padding" Value="0"/> 
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Foreground" Value="#234"/>  
		<Setter Property="Height" Value="16"/>       		
	</Style>
	<Style x:Key="PaneHeader" BasedOn="{StaticResource GenericLabel}" TargetType="{x:Type TextBlock}">    
		<Setter Property="FontSize" Value="17"/>
		<Setter Property="Foreground" Value="{DynamicResource DetailsPaneHeaderBrush}"/>
	</Style>
	<Style x:Key="TextBoxReadonly" BasedOn="{StaticResource GenericTextBox}" TargetType="{x:Type TextBlock}">     
	</Style>
	<Style x:Key="TextAreaReadonly" BasedOn="{StaticResource GenericTextBox}" TargetType="{x:Type TextBlock}">       
		<Setter Property="Margin" Value="5,0,0,0"/>  
	</Style>
	<Style x:Key="TextBoxContainer" TargetType="{x:Type Grid}">     
		<Setter Property="Margin" Value="14,0,8,14"/>
		<Setter Property="RowDefinition.Height" Value="Auto"/>
		<Setter Property="VerticalAlignment" Value="Top"/>
		<Setter Property="Height" Value="Auto"/>
	</Style>
	<Style x:Key="TextBoxContainerLabelColumn" TargetType="{x:Type ColumnDefinition}">
		<Setter Property="MaxWidth" Value="250"/>
		<Setter Property="MinWidth" Value="50"/>
	</Style>
	<Style x:Key="TextBoxContainerTextBoxColumn" TargetType="{x:Type ColumnDefinition}">
		<Setter Property="MaxWidth" Value="250"/>
		<Setter Property="MinWidth" Value="50"/>
	</Style>
	
	<!-- TextBox Style (applied everywhere)-->
	<Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBoxBase}">
	  <Setter Property="SnapsToDevicePixels" Value="True"/>
	  <Setter Property="OverridesDefaultStyle" Value="True"/>
  	  <Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource Self}}"/> 
	  <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
	  <Setter Property="Background" Value="{StaticResource TextBoxDefaultBackgroundBrush}"/>
	  <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
	  <Setter Property="MinWidth" Value="120"/>
	  <Setter Property="MinHeight" Value="20"/>
	  <Setter Property="FontSize" Value="12"/>
	  <Setter Property="AllowDrop" Value="true"/> 
		<Setter Property="Padding" Value="0"/> 
	  <Setter Property="Margin" Value="2"/>
	  <Setter Property="Template">
	    <Setter.Value>
	      <ControlTemplate TargetType="{x:Type TextBox}">
		  
	        <Border 
	          x:Name="Border"
	          CornerRadius="0" 
	          Padding="2"
	          Background="{TemplateBinding Background}"
	          BorderBrush="{StaticResource TextBoxDefaultBorderBrush}"
	          BorderThickness="1" >
	          <ScrollViewer Margin="0" x:Name="PART_ContentHost" MaxHeight="50"/>
	        </Border>
			
	        <ControlTemplate.Triggers>
	          	<Trigger Property="IsEnabled" Value="False">
	            	<Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxDisabledBackgroundBrush}"/>
	            	<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBoxDisabledBackgroundBrush}"/>
	            	<Setter Property="Foreground" Value="{StaticResource TextBoxDisabledForegroundBrush}"/>
	          	</Trigger>
				<Trigger Property="IsEnabled" Value="True">
	            	<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundBrush}"/>
	          	</Trigger>
				<Trigger Property="IsMouseOver" Value="true">
	            	<Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxMouseOverBackgroundBrush}"/>
					<Setter TargetName="Border"  Property="BorderBrush" Value="{StaticResource TextBoxMouseOverBorderBrush}" />			  
	     		</Trigger>
				<Trigger Property="IsKeyboardFocusWithin" Value="true">
	            	<Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxFocusBackgroundBrush}"/>
	   				<Setter TargetName="Border"  Property="BorderBrush" Value="{StaticResource TextBoxFocusBorderBrush}" />
	     		</Trigger>
			</ControlTemplate.Triggers>
			
	      </ControlTemplate>
	    </Setter.Value>
	  </Setter>
	</Style>


	<!--Textbox Error Style (applied when textbox given this x:Key reference)-->
	<Style x:Key="ErrorTextBoxStyle" TargetType="{x:Type TextBoxBase}" BasedOn="{StaticResource {x:Type TextBox}}">
	  <Setter Property="Template">
	  <Setter.Value>
	      <ControlTemplate TargetType="{x:Type TextBoxBase}">
	        <Border 
	          x:Name="Border"
	          CornerRadius="0" 
	          Padding="2"
	          Background="{StaticResource TextBoxDefaultBackgroundBrush}"
	          BorderBrush="{StaticResource TextBoxErrorBorderBrush}"
	          BorderThickness="1" >
	          <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
	        </Border>
			
			<ControlTemplate.Triggers>
	          	<Trigger Property="IsEnabled" Value="False">
	            	<Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxDisabledBackgroundBrush}"/>
	            	<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBoxDisabledBackgroundBrush}"/>
	            	<Setter Property="Foreground" Value="{StaticResource TextBoxDisabledForegroundBrush}"/>
	          	</Trigger>
				<Trigger Property="IsEnabled" Value="True">
	            	<Setter Property="Foreground" Value="{StaticResource TextBoxForegroundBrush}"/>
	          	</Trigger>
				<Trigger Property="IsMouseOver" Value="true">
	            	<Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxMouseOverBackgroundBrush}"/>
					<Setter TargetName="Border"  Property="BorderBrush" Value="{StaticResource TextBoxErrorBorderBrush}" />			  
	     		</Trigger>
				<Trigger Property="IsKeyboardFocusWithin" Value="true">
	            	<Setter TargetName="Border" Property="Background" Value="{StaticResource TextBoxFocusBackgroundBrush}"/>
	   				<Setter TargetName="Border"  Property="BorderBrush" Value="{StaticResource TextBoxErrorBorderBrush}" />
	     		</Trigger>
			</ControlTemplate.Triggers>
	      </ControlTemplate>
	    </Setter.Value>
	  </Setter>
	</Style>

	<!--Checkbox Style (applied everywhere)-->
	<Style TargetType="{x:Type CheckBox}">	
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxBorderBrush}"/>
		<Setter Property="FontSize" Value="12"/>
  	  	<Setter Property="ToolTip" Value="{Binding Content, RelativeSource={RelativeSource Self}}"/> 
  	  	<Setter Property="Margin" Value="3"/> 
  	  	<Setter Property="VerticalAlignment" Value="Stretch"/>
		

	</Style>


	<!--Button Style (applied everywhere)-->
	<Style TargetType="{x:Type Button}">
				<Setter Property="HorizontalContentAlignment" Value="Center"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="MaxWidth" Value="200"/>
				<Setter Property="FontSize" Value="12"/>
				<Setter Property="HorizontalAlignment" Value="Left"/>
				<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	
	
	
	
	
	
	
	
	
	<!--Details Pane Style (applied when pane given this x:Key reference)-->
	<Style x:Key="PaneStyle" TargetType="{x:Type Expander}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Grid x:Name="PaneGrid">
						<Grid x:Name="PaneSubGrid">
							<Grid.RowDefinitions>
								<RowDefinition Height="10"/>
								<RowDefinition/>
								<RowDefinition Height="10"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="10"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="10"/>
							</Grid.ColumnDefinitions>
							<Path Stretch="Fill" Data="M9.75,9.692 L-0.25,9.692 -0.25,-0.30799961 C-0.27917937,6.3878463 3.1097326,9.6656008 9.75,9.692 z" Fill="{DynamicResource PaneBodyBackground}" Margin="0,0.062,0,-0.062"/>
							<Path Fill="{DynamicResource PaneBodyBackground}" Stretch="Fill" Grid.Row="2" Data="M9.5,141.192 L9.5,130.942 0.25,130.942 C0.33854625,137.35345 3.414014,140.77799 9.5,141.192 z"/>
							<Path Fill="{DynamicResource PaneBodyBackground}" Stretch="Fill" Grid.Row="2" Data="M9.5,141.192 L9.5,130.942 0.25,130.942 C0.33854625,137.35345 3.414014,140.77799 9.5,141.192 z" Grid.Column="3" RenderTransformOrigin="0.5,0.5">
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
							<Path Stretch="Fill" Grid.Row="2" Data="M0,131.192 C0.054900304,137.47043 3.0970963,140.76157 9.5000007,140.692" Margin="0,-0.001,0.001,-0.001" Stroke="{DynamicResource PaneBottomLeftCornerBorder}"/>
							<Rectangle Fill="{DynamicResource PaneBodyBackground}" Grid.Row="1" Margin="0,0,0.001,0"/>
							<Rectangle Margin="0,-0.1,0,-0.126" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Fill="{DynamicResource PaneBodyBackground}"/>
							<Path Stretch="Fill" Stroke="{DynamicResource PaneLeftEdgeBorder}" HorizontalAlignment="Left" Margin="0,0,0,-1.014" Width="1" Grid.RowSpan="2" Data="M0,0 L8.0338E-15,131.20624"/>
							<Path Stretch="Fill" Stroke="{DynamicResource PaneBottomEdgeBorder}" Margin="-1.126,0,-2,-0.126" VerticalAlignment="Bottom" Height="1" Grid.Column="1" Grid.Row="2" Data="M9.999,141.192 L614,141.192"/>
							<Path Fill="{DynamicResource PaneBodyBackground}" Stretch="Fill" Data="M9.75,9.692 L-0.25,9.692 -0.25,-0.30799961 C-0.27917937,6.3878463 3.1097326,9.6656008 9.75,9.692 z" Grid.Column="2" RenderTransformOrigin="0.5,0.5" Margin="0,0.062,0,-0.062">
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
							<Path Stretch="Fill" Stroke="{DynamicResource PaneBottomRightCornerBorder}" Margin="0.001,-0.001,0,-0.001" Grid.Row="2" Data="M0,131.192 C0.054900304,137.47043 3.0970963,140.76157 9.5000007,140.692" Grid.Column="3" RenderTransformOrigin="0.5,0.5">
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
							<Path Stretch="Fill" Stroke="{DynamicResource PaneTopEdgeBorder}" Margin="0.001,0.036,0,-0.038" Data="M0,131.192 C0.054900304,137.47043 3.0970963,140.76157 9.5000007,140.692" Grid.Column="2" RenderTransformOrigin="0.5,0.5" StrokeThickness="0.5">
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
							<Path Stretch="Fill" Margin="0,0.036,0,-0.038" Data="M0,131.192 C0.054900304,137.47043 3.0970963,140.76157 9.5000007,140.692" Stroke="{DynamicResource PaneTopLeftCornerBorder}" StrokeThickness="0.5"/>
							<Rectangle Fill="{DynamicResource PaneBodyBackground}" Grid.Row="1" Grid.Column="3" RenderTransformOrigin="0.5,0.5">
								<Rectangle.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Rectangle.RenderTransform>
							</Rectangle>
							<Path Stretch="Fill" Stroke="{DynamicResource PaneRightEdgeBorder}" HorizontalAlignment="Right" Margin="0,0,0,-1.014" Width="1" Grid.RowSpan="2" Data="M0,0 L8.0338E-15,131.20624" Grid.Column="3" RenderTransformOrigin="0.5,0.5">
								<Path.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</Path.RenderTransform>
							</Path>
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Grid.ColumnSpan="3" Grid.RowSpan="3"/>
							<Path Stretch="Fill" Stroke="{DynamicResource PaneTopEdgeBorder}" Margin="-0.656,0,-0.641,-0.039" VerticalAlignment="Bottom" Height="1.007" Data="M9.999,141.192 L614,141.192" Grid.Column="1" StrokeThickness="0.5"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	
	
	<!--Buttons-->    



	<!--Window Header Buttons-->
	<Style x:Key="PaneButtonStyle" TargetType="{x:Type Button}" BasedOn="{x:Null}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Width="Auto" Height="Auto">
						<ContentPresenter OpacityMask="#FF000000" Margin="0,-0.166,0,0.333"/>
					</Grid>
				
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Opacity" Value="1"/>
						</Trigger>
                       
					</ControlTemplate.Triggers>
						
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	
<!--Tab Style Pane (applied when Tabs given this x:Key reference)-->
	
        <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
        <Style x:Key="PaneTabControlStyle" TargetType="{x:Type TabControl}">
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="Padding" Value="4,4,4,4"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
        	<Setter Property="Background" Value="#F9F9F9"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type TabControl}">
						
        				<Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
        					<Grid.ColumnDefinitions>
        						<ColumnDefinition x:Name="ColumnDefinition0" Width="Auto" MinWidth="40" MaxWidth="40"/>
        						<ColumnDefinition Width="Auto" MinWidth="140" MaxWidth="500"/>
        						<ColumnDefinition/>
        						<ColumnDefinition Width="26.732"/>
        					</Grid.ColumnDefinitions>
        					<Grid.RowDefinitions>
        						<RowDefinition x:Name="RowDefinition0" Height="Auto"/>
        						<RowDefinition x:Name="RowDefinition1" Height="*"/>
        					</Grid.RowDefinitions>
        					<Frame Focusable="False" Template="{DynamicResource icDocument}" Width="36" HorizontalAlignment="Left" VerticalAlignment="Top"/>
        					<GridSplitter Width="8.953" Height="Auto" HorizontalAlignment="Right" Margin="0,1,-0.807,1" Background="#00F0F0F0" Grid.Column="1" ResizeBehavior="CurrentAndNext"/>
        					<TextBlock Grid.Column="1" Width="Auto" Style="{DynamicResource PaneHeader}" Margin="0,0,8.146,0" VerticalAlignment="Stretch" Height="Auto" HorizontalAlignment="Stretch" Text="TextBlock Number 1 "/>
									
							
						
        					<Border Width="Auto" BorderThickness="0" BorderBrush="{DynamicResource PaneTabContainerOuterBorderBorder}" Background="{DynamicResource PaneTabContainerOuterBorderBackground}" Margin="2,1,0,9" HorizontalAlignment="Left" Grid.Column="2" VerticalAlignment="Stretch" Height="Auto">
        						<Border Width="Auto" BorderThickness="1" BorderBrush="{DynamicResource PaneTabContainerInnerBorderBorder}" Background="{DynamicResource PaneTabContainerInnerBorderBackground}">
        							<TabPanel x:Name="HeaderPanel" Margin="0" IsItemsHost="true" Panel.ZIndex="1" Grid.Column="0" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>
        						</Border>
        					</Border>
							
        					<Border x:Name="ContentPanel" Grid.Column="0" Grid.Row="1" Background="#00000000" BorderBrush="#00000000" BorderThickness="{TemplateBinding BorderThickness}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" Grid.ColumnSpan="4">
        						<ContentPresenter x:Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="SelectedContent"/>
        					</Border>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="TabStripPlacement" Value="Bottom">
        						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
        						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
        						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
        						<Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
        						<Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
        					</Trigger>
        					<Trigger Property="TabStripPlacement" Value="Left">
        						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
        						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
        						<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
        						<Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
        						<Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
        						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
        						<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
        						<Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
        					</Trigger>
        					<Trigger Property="TabStripPlacement" Value="Right">
        						<Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
        						<Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
        						<Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
        						<Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
        						<Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
        						<Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
        						<Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
        						<Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
		

		
		<LinearGradientBrush x:Key="LightBrush" StartPoint="0,0" EndPoint="0,1">
		  <LinearGradientBrush.GradientStops>
		    <GradientStopCollection>
		      <GradientStop Color="#FFF" Offset="0.0"/>
		      <GradientStop Color="#EEE" Offset="1.0"/>
		    </GradientStopCollection>
		  </LinearGradientBrush.GradientStops>
		</LinearGradientBrush>
		<SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
		<SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF" />
		<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
		<SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />
		<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />

        <Style TargetType="{x:Type TabItem}">
			  <Setter Property="BorderThickness" Value="1"/>
			  <Setter Property="BorderBrush" Value="Red"/>
			  <Setter Property="Background" Value="LightBlue"/>
			  <Setter Property="VerticalContentAlignment" Value="Center"/>
			  <Setter Property="HorizontalContentAlignment" Value="Center"/>
			  <Setter Property="Template">
			    <Setter.Value>
			      <ControlTemplate TargetType="{x:Type TabItem}">
			        <Border x:Name="border" Width="Auto" >
			          <Grid  Width="Auto">
			            	<Grid >
				              	<Border x:Name="OuterBorder" 
									Background="{DynamicResource PaneTabButtonOuterBorderDefaultBackgroundBrush}" 
				                    BorderBrush="{DynamicResource PaneTabButtonOuterBorderDefaultBorderBrush}" 
								
									Height="Auto"								
				                    BorderThickness="1"	/>
				            </Grid>
				            <Border x:Name="InnerBorder" BorderThickness="1" 
									Margin="1" Padding="5,2,5,2" Width="Auto"
									Background="{DynamicResource PaneTabButtonInnerBorderDefaultBackgroundBrush}" 
				                    BorderBrush="{DynamicResource PaneTabButtonInnerBorderDefaultBorderBrush}" 		
				                    >
									<Grid HorizontalAlignment="Center" MaxWidth="130" MinWidth="30" Margin="0" VerticalAlignment="Center">
										<TextBlock x:Name="textBlock" Text="{TemplateBinding Header}" Style="{DynamicResource TabLabel}"  TextAlignment="Center" Foreground="{DynamicResource PaneTabButtonForegroundBrush}"/>
					              		<ContentPresenter Visibility="Hidden" ContentSource="Header"/>
									</Grid>
				            </Border>
				          </Grid>
				        </Border>
						<ControlTemplate.Triggers>
						   <Trigger Property="IsMouseOver" Value="True">
				            <Setter Property="Panel.ZIndex" Value="100" />
				            <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource PaneTabButtonOuterBorderHoverBackgroundBrush}" />
				            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource PaneTabButtonInnerBorderHoverBackgroundBrush}" />
				           	<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource PaneTabButtonOuterBorderHoverBorderBrush}" />
				            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PaneTabButtonInnerBorderHoverBorderBrush}" />
				            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1" />
				           
				          </Trigger>
				          <Trigger Property="IsSelected" Value="True">
				            <Setter Property="Panel.ZIndex" Value="100" />
				            <Setter TargetName="OuterBorder" Property="Background" Value="{DynamicResource PaneTabButtonOuterBorderPressedBackgroundBrush}" />
				            <Setter TargetName="InnerBorder" Property="Background" Value="{DynamicResource PaneTabButtonInnerBorderPressedBackgroundBrush}" />
				           	<Setter TargetName="OuterBorder" Property="BorderBrush" Value="{DynamicResource PaneTabButtonOuterBorderPressedBorderBrush}" />
				            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{DynamicResource PaneTabButtonInnerBorderPressedBorderBrush}" />
				             <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1" />
				             <Setter Property="Foreground" TargetName="textBlock" Value="{DynamicResource PaneTabButtonForegroundBrush_Selected}"/>
				           </Trigger>
				          <Trigger Property="IsEnabled" Value="False">
				            <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
				            <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
				            <Setter TargetName="InnerBorder" Property="BorderThickness" Value="1" />
				            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}" />
				            <Setter Property="Visibility" TargetName="border" Value="Collapsed"/>
				          </Trigger>
				        </ControlTemplate.Triggers>
					</ControlTemplate>
			    </Setter.Value>
			  </Setter>
			</Style>


<!--PaneTab Container-->

	<SolidColorBrush x:Key="PaneTabContainerInnerBorderBorder" Color="#33858585"/>
	<SolidColorBrush x:Key="PaneTabContainerInnerBorderBackground" Color="#00000000"/>
	<SolidColorBrush x:Key="PaneTabContainerOuterBorderBorder" Color="White"/>
	<SolidColorBrush x:Key="PaneTabContainerOuterBorderBackground" Color="#00000000"/>
	

 <!--PaneTab Buttons-->
   
		<!--Default Button Brushes-->
    <SolidColorBrush x:Key="PaneTabButtonOuterBorderDefaultBackgroundBrush" Color="#00000000"/>
    <SolidColorBrush x:Key="PaneTabButtonOuterBorderDefaultBorderBrush" Color="#00000000"/>
	<SolidColorBrush x:Key="PaneTabButtonInnerBorderDefaultBackgroundBrush" Color="#00000000"/>
    <SolidColorBrush x:Key="PaneTabButtonInnerBorderDefaultBorderBrush" Color="#00000000"/>
	
		<!--Hover Button Brushes-->
    <SolidColorBrush x:Key="PaneTabButtonOuterBorderHoverBackgroundBrush" Color="#AAC5C7CB"/>
    <SolidColorBrush x:Key="PaneTabButtonOuterBorderHoverBorderBrush" Color="#aa566771"/>
    <SolidColorBrush x:Key="PaneTabButtonInnerBorderHoverBackgroundBrush" Color="#00000000"/>
    <SolidColorBrush x:Key="PaneTabButtonInnerBorderHoverBorderBrush" Color="#00000000"/>
	
	<!--Pressed Button Brushes-->
	<SolidColorBrush x:Key="PaneTabButtonOuterBorderPressedBackgroundBrush" Color="#00000000"/>
    <SolidColorBrush x:Key="PaneTabButtonOuterBorderPressedBorderBrush" Color="#FF8D9396"/>
    <SolidColorBrush x:Key="PaneTabButtonInnerBorderPressedBackgroundBrush" Color="#00000000"/>
    <SolidColorBrush x:Key="PaneTabButtonInnerBorderPressedBorderBrush" Color="#ffecf3f9"/>
	
    
	    <!--Button Foreground Brushes-->
	    <SolidColorBrush x:Key="PaneTabbuttonForegroundBrush" Color="#ffffffff"/>
		<!--<SolidColorBrush x:Key="PanelbuttonForegroundBrush" Color="#ff354253"/>-->
		

<!--SCROLLVIEWER -->
	
        <SolidColorBrush x:Key="MainSectionScrollViewerGlyphBrush" Color="#369" /> <!-- arrow-->
        <SolidColorBrush x:Key="MainSectionScrollViewerHoverBrush" Color="#ff99ccff"/> <!-- hover arrow-->
		<SolidColorBrush x:Key="MainSectionScrollViewerSliderNormalBorderBrush" Color="#99336699"/> <!--normal slider border-->
		<SolidColorBrush x:Key="MainSectionScrollViewerSliderNormalBackgroundBrush" Color="#33ffffff"/> <!--  normal slider background-->
		<SolidColorBrush x:Key="MainSectionScrollViewerSliderHoverBackgroundBrush" Color="#ffa4c2d5"/> <!-- hover slider background-->
		<SolidColorBrush x:Key="MainSectionScrollViewerSliderHoverBorderBrush" Color="#ff729cb7"/> <!-- hover slider border-->
		<SolidColorBrush x:Key="MainSectionScrollViewerTrackandButtonBackgroundBrush" Color="#00000000"/><!--  track background-->
		<SolidColorBrush x:Key="MainSectionScrollViewerTrackandButtonBorderBrush" Color="#00000000"/><!--  track border-->
		
        <SolidColorBrush x:Key="MainSectionScrollViewerNormalBrush" Color="#00000000" /><!-- slider up/down background-->
            


        <!-- Style for overall  ScrollViewer -->
        <Style x:Key="MainSectionScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
			<Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid Width="Auto">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="0" Margin="0"/>

                        	<ScrollBar x:Name="PART_VerticalScrollBar"
                        		Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
					            Orientation="Vertical"
                        		Value="{TemplateBinding VerticalOffset}"
                        		Maximum="{TemplateBinding ScrollableHeight}"
                        		ViewportSize="{TemplateBinding ViewportHeight}"
								HorizontalAlignment="Stretch" 
								Grid.Column="1" 
								Width="18" Style="{DynamicResource VerticalScrollBarStyle}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
					            Orientation="Horizontal"
								VerticalAlignment="Stretch"
					            Grid.Row="1"
					            Value="{TemplateBinding HorizontalOffset}"
					            Maximum="{TemplateBinding ScrollableWidth}"
					            ViewportSize="{TemplateBinding ViewportWidth}" MinHeight="18" 
					            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
								Style="{DynamicResource HorizontalScrollBarStyle}" 
								/>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
		
		
	
	
	
	
	 <!-- Horizontal Scrollbar for Scrollviewer -->
    <Style x:Key="VerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
    	<Setter Property="SnapsToDevicePixels" Value="True"/>
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
    	<Style.Triggers>
    		<Trigger Property="Orientation" Value="Horizontal">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ScrollBar}">
    						<Grid>
    							<Grid.ColumnDefinitions>
    								<ColumnDefinition MaxWidth="18"/>
    								<ColumnDefinition Width="1E-05*"/>
    								<ColumnDefinition MaxWidth="18"/>
    							</Grid.ColumnDefinitions>
    							<Border Grid.ColumnSpan="3" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" CornerRadius="2"/>
    							<RepeatButton Width="18" Content="M 4 0 L 4 8 L 0 4 Z" Grid.Column="0" Command="ScrollBar.LineLeftCommand">
    								<RepeatButton.Style>
    									<Style TargetType="{x:Type RepeatButton}">
    										<Setter Property="SnapsToDevicePixels" Value="True"/>
    										<Setter Property="OverridesDefaultStyle" Value="True"/>
    										<Setter Property="Focusable" Value="False"/>
    										<Setter Property="Template">
    											<Setter.Value>
    												<ControlTemplate TargetType="{x:Type RepeatButton}">
    													<Border x:Name="Border" Margin="1" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBorderBrush}" BorderThickness="0" CornerRadius="2">
    														<Path x:Name="Arrow" Fill="{DynamicResource MainSectionScrollViewerGlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
    													</Border>
    													<ControlTemplate.Triggers>
    														<Trigger Property="IsPressed" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsMouseOver" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsEnabled" Value="False">
    															<Setter Property="Foreground" Value="#00000000"/>
    														</Trigger>
    													</ControlTemplate.Triggers>
    												</ControlTemplate>
    											</Setter.Value>
    										</Setter>
    									</Style>
    								</RepeatButton.Style>
    							</RepeatButton>
    							<Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
    								<Track.DecreaseRepeatButton>
    									<RepeatButton Command="ScrollBar.PageLeftCommand">
    										<RepeatButton.Style>
    											<Style TargetType="{x:Type RepeatButton}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Border Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}"/>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    								</Track.DecreaseRepeatButton>
    								<Track.IncreaseRepeatButton>
    									<RepeatButton Command="ScrollBar.PageRightCommand">
    										<RepeatButton.Style>
    											<Style TargetType="{x:Type RepeatButton}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Border Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}"/>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    								</Track.IncreaseRepeatButton>
    								<Track.Thumb>
    									<Thumb Margin="0,1" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerSliderNormalBorderBrush}">
    										<Thumb.Style>
    											<Style TargetType="{x:Type Thumb}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type Thumb}">
    															<Border x:Name="ThumbBorder" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerSliderHoverBackgroundBrush}" BorderThickness="1" CornerRadius="2"/>
    															<ControlTemplate.Triggers>
    																<Trigger Property="IsMouseOver" Value="True">
    																	<Setter Property="BorderBrush" TargetName="ThumbBorder" Value="{DynamicResource MainSectionScrollViewerSliderHoverBorderBrush}"/>
    																	<Setter Property="Background" TargetName="ThumbBorder" Value="{DynamicResource MainSectionScrollViewerSliderHoverBackgroundBrush}"/>
    																</Trigger>
    																<Trigger Property="IsEnabled" Value="False">
    																	<Setter Property="Foreground" Value="#00000000"/>
    																</Trigger>
    															</ControlTemplate.Triggers>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</Thumb.Style>
    									</Thumb>
    								</Track.Thumb>
    							</Track>
    							<RepeatButton Width="18" Content="M 0 0 L 4 4 L 0 8 Z" Grid.Column="3" Command="ScrollBar.LineRightCommand">
    								<RepeatButton.Style>
    									<Style TargetType="{x:Type RepeatButton}">
    										<Setter Property="SnapsToDevicePixels" Value="True"/>
    										<Setter Property="OverridesDefaultStyle" Value="True"/>
    										<Setter Property="Focusable" Value="False"/>
    										<Setter Property="Template">
    											<Setter.Value>
    												<ControlTemplate TargetType="{x:Type RepeatButton}">
    													<Border x:Name="Border" Margin="1" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBorderBrush}" BorderThickness="0" CornerRadius="2">
    														<Path x:Name="Arrow" Fill="{DynamicResource MainSectionScrollViewerGlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
    													</Border>
    													<ControlTemplate.Triggers>
    														<Trigger Property="IsPressed" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsMouseOver" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsEnabled" Value="False">
    															<Setter Property="Foreground" Value="#00000000"/>
    														</Trigger>
    													</ControlTemplate.Triggers>
    												</ControlTemplate>
    											</Setter.Value>
    										</Setter>
    									</Style>
    								</RepeatButton.Style>
    							</RepeatButton>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Trigger>
    		<Trigger Property="Orientation" Value="Vertical">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ScrollBar}">
    						<Grid>
    							<Grid.RowDefinitions>
    								<RowDefinition MaxHeight="18"/>
    								<RowDefinition Height="1E-05*"/>
    								<RowDefinition MaxHeight="18"/>
    							</Grid.RowDefinitions>
    							<Border Grid.RowSpan="3" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" CornerRadius="2"/>
    							<RepeatButton Height="18" Content="M 0 4 L 8 4 L 4 0 Z" Grid.Row="0" Command="ScrollBar.LineUpCommand">
    								<RepeatButton.Style>
    									<Style TargetType="{x:Type RepeatButton}">
    										<Setter Property="SnapsToDevicePixels" Value="True"/>
    										<Setter Property="OverridesDefaultStyle" Value="True"/>
    										<Setter Property="Focusable" Value="False"/>
    										<Setter Property="Template">
    											<Setter.Value>
    												<ControlTemplate TargetType="{x:Type RepeatButton}">
    													<Border x:Name="Border" Margin="1" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBorderBrush}" BorderThickness="0" CornerRadius="2">
    														<Path x:Name="Arrow" Fill="{DynamicResource MainSectionScrollViewerGlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
    													</Border>
    													<ControlTemplate.Triggers>
    														<Trigger Property="IsPressed" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsMouseOver" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsEnabled" Value="False">
    															<Setter Property="Foreground" Value="#00000000"/>
    														</Trigger>
    													</ControlTemplate.Triggers>
    												</ControlTemplate>
    											</Setter.Value>
    										</Setter>
    									</Style>
    								</RepeatButton.Style>
    							</RepeatButton>
    							<Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
    								<Track.DecreaseRepeatButton>
    									<RepeatButton Command="ScrollBar.PageUpCommand">
    										<RepeatButton.Style>
    											<Style TargetType="{x:Type RepeatButton}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Border Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}"/>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    								</Track.DecreaseRepeatButton>
    								<Track.IncreaseRepeatButton>
    									<RepeatButton Command="ScrollBar.PageDownCommand">
    										<RepeatButton.Style>
    											<Style TargetType="{x:Type RepeatButton}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Border Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}"/>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    								</Track.IncreaseRepeatButton>
    								<Track.Thumb>
    									<Thumb Margin="1,0" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBorderBrush}">
    										<Thumb.Style>
    											<Style TargetType="{x:Type Thumb}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type Thumb}">
    															<Border x:Name="ThumbBorder" Background="{DynamicResource MainSectionScrollViewerSliderNormalBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerSliderNormalBorderBrush}" BorderThickness="1" CornerRadius="2"/>
    															<ControlTemplate.Triggers>
    																<Trigger Property="IsMouseOver" Value="True">
    																	<Setter Property="BorderBrush" TargetName="ThumbBorder" Value="{DynamicResource MainSectionScrollViewerSliderHoverBorderBrush}"/>
    																	<Setter Property="Background" TargetName="ThumbBorder" Value="{DynamicResource MainSectionScrollViewerSliderHoverBackgroundBrush}"/>
    																</Trigger>
    																<Trigger Property="IsEnabled" Value="False">
    																	<Setter Property="Foreground" Value="#00000000"/>
    																</Trigger>
    															</ControlTemplate.Triggers>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</Thumb.Style>
    									</Thumb>
    								</Track.Thumb>
    							</Track>
    							<RepeatButton Height="18" Content="M 0 0 L 4 4 L 8 0 Z" Grid.Row="3" Command="ScrollBar.LineDownCommand">
    								<RepeatButton.Style>
    									<Style TargetType="{x:Type RepeatButton}">
    										<Setter Property="SnapsToDevicePixels" Value="True"/>
    										<Setter Property="OverridesDefaultStyle" Value="True"/>
    										<Setter Property="Focusable" Value="False"/>
    										<Setter Property="Template">
    											<Setter.Value>
    												<ControlTemplate TargetType="{x:Type RepeatButton}">
    													<Border x:Name="Border" Margin="1" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderThickness="0" CornerRadius="2">
    														<Path x:Name="Arrow" Fill="{DynamicResource MainSectionScrollViewerGlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
    													</Border>
    													<ControlTemplate.Triggers>
    														<Trigger Property="IsPressed" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsMouseOver" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsEnabled" Value="False">
    															<Setter Property="Foreground" Value="#00000000"/>
    														</Trigger>
    													</ControlTemplate.Triggers>
    												</ControlTemplate>
    											</Setter.Value>
    										</Setter>
    									</Style>
    								</RepeatButton.Style>
    							</RepeatButton>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Trigger>
    	</Style.Triggers>
    </Style>
	
	
	 <!-- Horizontal Scrollbar for Scrollviewer -->
    <Style x:Key="HorizontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
    	<Setter Property="SnapsToDevicePixels" Value="True"/>
    	<Setter Property="OverridesDefaultStyle" Value="True"/>
    	<Style.Triggers>
    		<Trigger Property="Orientation" Value="Horizontal">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ScrollBar}">
    						<Grid>
    							<Grid.ColumnDefinitions>
    								<ColumnDefinition MaxWidth="18"/>
    								<ColumnDefinition Width="1E-05*"/>
    								<ColumnDefinition MaxWidth="18"/>
    							</Grid.ColumnDefinitions>
    							<Border Grid.ColumnSpan="3" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" CornerRadius="2"/>
    							<RepeatButton Width="18" Content="M 4 0 L 4 8 L 0 4 Z" Grid.Column="0" Command="ScrollBar.LineLeftCommand">
    								<RepeatButton.Style>
    									<Style TargetType="{x:Type RepeatButton}">
    										<Setter Property="SnapsToDevicePixels" Value="True"/>
    										<Setter Property="OverridesDefaultStyle" Value="True"/>
    										<Setter Property="Focusable" Value="False"/>
    										<Setter Property="Template">
    											<Setter.Value>
    												<ControlTemplate TargetType="{x:Type RepeatButton}">
    													<Border x:Name="Border" Margin="1" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBorderBrush}" BorderThickness="0" CornerRadius="2">
    														<Path x:Name="Arrow" Fill="{DynamicResource MainSectionScrollViewerGlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
    													</Border>
    													<ControlTemplate.Triggers>
    														<Trigger Property="IsPressed" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsMouseOver" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsEnabled" Value="False">
    															<Setter Property="Foreground" Value="#00000000"/>
    														</Trigger>
    													</ControlTemplate.Triggers>
    												</ControlTemplate>
    											</Setter.Value>
    										</Setter>
    									</Style>
    								</RepeatButton.Style>
    							</RepeatButton>
    							<Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
    								<Track.DecreaseRepeatButton>
    									<RepeatButton Command="ScrollBar.PageLeftCommand">
    										<RepeatButton.Style>
    											<Style TargetType="{x:Type RepeatButton}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Border Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}"/>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    								</Track.DecreaseRepeatButton>
    								<Track.IncreaseRepeatButton>
    									<RepeatButton Command="ScrollBar.PageRightCommand">
    										<RepeatButton.Style>
    											<Style TargetType="{x:Type RepeatButton}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Border Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}"/>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    								</Track.IncreaseRepeatButton>
    								<Track.Thumb>
    									<Thumb Margin="0,1" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBorderBrush}">
    										<Thumb.Style>
    											<Style TargetType="{x:Type Thumb}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type Thumb}">
    															<Border x:Name="ThumbBorder" Background="{DynamicResource MainSectionScrollViewerSliderNormalBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerSliderNormalBorderBrush}" BorderThickness="1" CornerRadius="2"/>
    															<ControlTemplate.Triggers>
    																<Trigger Property="IsMouseOver" Value="True">
    																	<Setter Property="BorderBrush" TargetName="ThumbBorder" Value="{DynamicResource MainSectionScrollViewerSliderHoverBorderBrush}"/>
    																	<Setter Property="Background" TargetName="ThumbBorder" Value="{DynamicResource MainSectionScrollViewerSliderHoverBackgroundBrush}"/>
    																</Trigger>
    																<Trigger Property="IsEnabled" Value="False">
    																	<Setter Property="Foreground" Value="#00000000"/>
    																</Trigger>
    															</ControlTemplate.Triggers>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</Thumb.Style>
    									</Thumb>
    								</Track.Thumb>
    							</Track>
    							<RepeatButton Width="18" Content="M 0 0 L 4 4 L 0 8 Z" Grid.Column="3" Command="ScrollBar.LineRightCommand">
    								<RepeatButton.Style>
    									<Style TargetType="{x:Type RepeatButton}">
    										<Setter Property="SnapsToDevicePixels" Value="True"/>
    										<Setter Property="OverridesDefaultStyle" Value="True"/>
    										<Setter Property="Focusable" Value="False"/>
    										<Setter Property="Template">
    											<Setter.Value>
    												<ControlTemplate TargetType="{x:Type RepeatButton}">
    													<Border x:Name="Border" Margin="1" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderThickness="0" CornerRadius="2">
    														<Path x:Name="Arrow" Fill="{DynamicResource MainSectionScrollViewerGlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
    													</Border>
    													<ControlTemplate.Triggers>
    														<Trigger Property="IsPressed" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsMouseOver" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsEnabled" Value="False">
    															<Setter Property="Foreground" Value="#00000000"/>
    														</Trigger>
    													</ControlTemplate.Triggers>
    												</ControlTemplate>
    											</Setter.Value>
    										</Setter>
    									</Style>
    								</RepeatButton.Style>
    							</RepeatButton>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Trigger>
    		<Trigger Property="Orientation" Value="Vertical">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ScrollBar}">
    						<Grid>
    							<Grid.RowDefinitions>
    								<RowDefinition MaxHeight="18"/>
    								<RowDefinition Height="1E-05*"/>
    								<RowDefinition MaxHeight="18"/>
    							</Grid.RowDefinitions>
    							<Border Grid.RowSpan="3" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" CornerRadius="2"/>
    							<RepeatButton Height="18" Content="M 0 4 L 8 4 L 4 0 Z" Grid.Row="0" Command="ScrollBar.LineUpCommand">
    								<RepeatButton.Style>
    									<Style TargetType="{x:Type RepeatButton}">
    										<Setter Property="SnapsToDevicePixels" Value="True"/>
    										<Setter Property="OverridesDefaultStyle" Value="True"/>
    										<Setter Property="Focusable" Value="False"/>
    										<Setter Property="Template">
    											<Setter.Value>
    												<ControlTemplate TargetType="{x:Type RepeatButton}">
    													<Border x:Name="Border" Margin="1" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBorderBrush}" BorderThickness="0" CornerRadius="2">
    														<Path x:Name="Arrow" Fill="{DynamicResource MainSectionScrollViewerGlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
    													</Border>
    													<ControlTemplate.Triggers>
    														<Trigger Property="IsPressed" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsMouseOver" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsEnabled" Value="False">
    															<Setter Property="Foreground" Value="#00000000"/>
    														</Trigger>
    													</ControlTemplate.Triggers>
    												</ControlTemplate>
    											</Setter.Value>
    										</Setter>
    									</Style>
    								</RepeatButton.Style>
    							</RepeatButton>
    							<Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
    								<Track.DecreaseRepeatButton>
    									<RepeatButton Command="ScrollBar.PageUpCommand">
    										<RepeatButton.Style>
    											<Style TargetType="{x:Type RepeatButton}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Border Background="#00000000" BorderBrush="Red"/>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    								</Track.DecreaseRepeatButton>
    								<Track.IncreaseRepeatButton>
    									<RepeatButton Command="ScrollBar.PageDownCommand">
    										<RepeatButton.Style>
    											<Style TargetType="{x:Type RepeatButton}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Border Background="#00000000" BorderBrush="Red"/>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    								</Track.IncreaseRepeatButton>
    								<Track.Thumb>
    									<Thumb Margin="1,0" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBorderBrush}">
    										<Thumb.Style>
    											<Style TargetType="{x:Type Thumb}">
    												<Setter Property="SnapsToDevicePixels" Value="True"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type Thumb}">
    															<Border x:Name="ThumbBorder" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBorderBrush}" BorderThickness="1" CornerRadius="2"/>
    															<ControlTemplate.Triggers>
    																<Trigger Property="IsMouseOver" Value="True">
    																	<Setter Property="BorderBrush" TargetName="ThumbBorder" Value="{DynamicResource MainSectionScrollViewerSliderHoverBorderBrush}"/>
    																	<Setter Property="Background" TargetName="ThumbBorder" Value="{DynamicResource MainSectionScrollViewerSliderHoverBackgroundBrush}"/>
    																</Trigger>
    																<Trigger Property="IsEnabled" Value="False">
    																	<Setter Property="Foreground" Value="#00000000"/>
    																</Trigger>
    															</ControlTemplate.Triggers>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</Thumb.Style>
    									</Thumb>
    								</Track.Thumb>
    							</Track>
    							<RepeatButton Height="18" Content="M 0 0 L 4 4 L 8 0 Z" Grid.Row="3" Command="ScrollBar.LineDownCommand">
    								<RepeatButton.Style>
    									<Style TargetType="{x:Type RepeatButton}">
    										<Setter Property="SnapsToDevicePixels" Value="True"/>
    										<Setter Property="OverridesDefaultStyle" Value="True"/>
    										<Setter Property="Focusable" Value="False"/>
    										<Setter Property="Template">
    											<Setter.Value>
    												<ControlTemplate TargetType="{x:Type RepeatButton}">
    													<Border x:Name="Border" Margin="1" Background="{DynamicResource MainSectionScrollViewerTrackandButtonBackgroundBrush}" BorderBrush="{DynamicResource MainSectionScrollViewerTrackandButtonBorderBrush}" BorderThickness="0" CornerRadius="2">
    														<Path x:Name="Arrow" Fill="{DynamicResource MainSectionScrollViewerGlyphBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"/>
    													</Border>
    													<ControlTemplate.Triggers>
    														<Trigger Property="IsPressed" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsMouseOver" Value="True">
    															<Setter Property="Fill" TargetName="Arrow" Value="{DynamicResource MainSectionScrollViewerHoverBrush}"/>
    														</Trigger>
    														<Trigger Property="IsEnabled" Value="False">
    															<Setter Property="Foreground" Value="#00000000"/>
    														</Trigger>
    													</ControlTemplate.Triggers>
    												</ControlTemplate>
    											</Setter.Value>
    										</Setter>
    									</Style>
    								</RepeatButton.Style>
    							</RepeatButton>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Trigger>
    	</Style.Triggers>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ToggleButton}">
    				<Border Padding="{TemplateBinding Padding}">
    					<Grid SnapsToDevicePixels="False" Background="Transparent">
    						<Grid.RowDefinitions>
    							<RowDefinition Height="19"/>
    							<RowDefinition Height="*"/>
    						</Grid.RowDefinitions>
    						<Grid>
    							<Grid.LayoutTransform>
    								<TransformGroup>
    									<TransformGroup.Children>
    										<TransformCollection>
    											<RotateTransform Angle="-90"/>
    										</TransformCollection>
    									</TransformGroup.Children>
    								</TransformGroup>
    							</Grid.LayoutTransform>
    							<Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19"/>
    							<Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
    						</Grid>
    						<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" SnapsToDevicePixels="True" Grid.Row="1" RecognizesAccessKey="True"/>
    					</Grid>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsChecked" Value="true">
    						<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
    					</Trigger>
    					<Trigger Property="IsMouseOver" Value="true">
    						<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
    						<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
    					</Trigger>
    					<Trigger Property="IsPressed" Value="true">
    						<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
    						<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
    						<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ToggleButton}">
    				<Border Padding="{TemplateBinding Padding}">
    					<Grid SnapsToDevicePixels="False" Background="Transparent">
    						<Grid.ColumnDefinitions>
    							<ColumnDefinition Width="19"/>
    							<ColumnDefinition Width="*"/>
    						</Grid.ColumnDefinitions>
    						<Grid>
    							<Grid.LayoutTransform>
    								<TransformGroup>
    									<TransformGroup.Children>
    										<TransformCollection>
    											<RotateTransform Angle="180"/>
    										</TransformCollection>
    									</TransformGroup.Children>
    								</TransformGroup>
    							</Grid.LayoutTransform>
    							<Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19"/>
    							<Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
    						</Grid>
    						<ContentPresenter HorizontalAlignment="Left" Margin="4,0,0,0" VerticalAlignment="Center" SnapsToDevicePixels="True" Grid.Column="1" RecognizesAccessKey="True"/>
    					</Grid>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsChecked" Value="true">
    						<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
    					</Trigger>
    					<Trigger Property="IsMouseOver" Value="true">
    						<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
    						<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
    					</Trigger>
    					<Trigger Property="IsPressed" Value="true">
    						<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
    						<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
    						<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ToggleButton}">
    				<Border Padding="{TemplateBinding Padding}">
    					<Grid SnapsToDevicePixels="False" Background="Transparent">
    						<Grid.RowDefinitions>
    							<RowDefinition Height="19"/>
    							<RowDefinition Height="*"/>
    						</Grid.RowDefinitions>
    						<Grid>
    							<Grid.LayoutTransform>
    								<TransformGroup>
    									<TransformGroup.Children>
    										<TransformCollection>
    											<RotateTransform Angle="90"/>
    										</TransformCollection>
    									</TransformGroup.Children>
    								</TransformGroup>
    							</Grid.LayoutTransform>
    							<Ellipse x:Name="circle" Stroke="DarkGray" HorizontalAlignment="Center" VerticalAlignment="Center" Width="19" Height="19"/>
    							<Path x:Name="arrow" Stroke="#666" StrokeThickness="2" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5"/>
    						</Grid>
    						<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" VerticalAlignment="Top" SnapsToDevicePixels="True" Grid.Row="1" RecognizesAccessKey="True"/>
    					</Grid>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsChecked" Value="true">
    						<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
    					</Trigger>
    					<Trigger Property="IsMouseOver" Value="true">
    						<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
    						<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
    					</Trigger>
    					<Trigger Property="IsPressed" Value="true">
    						<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
    						<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
    						<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ExpanderHeaderFocusVisual">
    	<Setter Property="Control.Template">
    		<Setter.Value>
    			<ControlTemplate>
    				<Border>
    					<Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="0" SnapsToDevicePixels="true"/>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ToggleButton}">
    				<Border Padding="{TemplateBinding Padding}">
    					<Grid SnapsToDevicePixels="False" Background="Transparent">
    						<Grid.ColumnDefinitions>
    			
    							<ColumnDefinition Width="10"/>
    							<ColumnDefinition/>
    							<ColumnDefinition Width="13.5"/>
								<ColumnDefinition Width="10"/>
    						</Grid.ColumnDefinitions>
    						<Path x:Name="arrow" Stroke="{DynamicResource GenericLineGeometryBrush}" StrokeThickness="3" HorizontalAlignment="Left" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 L 8,1.5" Margin="1.093,6,0,0" Grid.Column="2" Stretch="Fill" Width="Auto" Height="7.195"/>
    						<ContentPresenter  HorizontalAlignment="Left" Margin="2,6,0,0" SnapsToDevicePixels="True" Grid.Column="1" RecognizesAccessKey="True"/>
    						<!--<WpfApplication2:geomCornerCurve VerticalAlignment="Top" Height="10" Width="10"/>
    						<WpfApplication2:geomCornerCurve VerticalAlignment="Top" Height="10" Width="10" Grid.Column="3" RenderTransformOrigin="0.5,0.5">
    							<WpfApplication2:geomCornerCurve.RenderTransform>
    								<TransformGroup>
    									<ScaleTransform ScaleX="-1"/>
    									<SkewTransform/>
    									<RotateTransform/>
    									<TranslateTransform/>
    								</TransformGroup>
    							</WpfApplication2:geomCornerCurve.RenderTransform>
    						</WpfApplication2:geomCornerCurve>-->
    						<Path Fill="{x:Null}" Stretch="Fill" Stroke="{DynamicResource GenericLineGeometryBrush}" Margin="-1.167,0.17,-1.093,0" VerticalAlignment="Top" Height="1" Grid.Column="1" Data="M0,0 L1,1E-0" Grid.ColumnSpan="2"/>
    						<Path Stretch="Fill" Stroke="{DynamicResource GenericLineGeometryBrush}" StrokeThickness="1" HorizontalAlignment="Left" Margin="-0.205,8.438,0,-8" Width="3.42" Data="M0.375,9.4375 L0.375,34.9995"/>
    						<Path Stretch="Fill" Stroke="{DynamicResource GenericLineGeometryBrush}" StrokeThickness="1" HorizontalAlignment="Right" Margin="0,8.438,0.001,-8" Width="3.42" Data="M0.375,9.4375 L0.375,34.9995" Grid.Column="3"/>
    						<Path Fill="{x:Null}" Stretch="Fill"  Stroke="{DynamicResource GenericLineGeometryBrush}" Margin="-0.167,0.167,-0.499,0" VerticalAlignment="Top" Height="9.334" Data="M9.3333333,0.41666667 C3.3937699,0.365977 0.1653222,3.0261965 -0.33300032,8.4163333"/>
    						<Path Fill="{x:Null}" Stretch="Fill"  Stroke="{DynamicResource GenericLineGeometryBrush}" Margin="-0.671,0.167,0.005,0" VerticalAlignment="Top" Height="9.334" Data="M9.3333333,0.41666667 C3.3937699,0.365977 0.1653222,3.0261965 -0.33300032,8.4163333" Grid.Column="3" RenderTransformOrigin="0.5,0.5">
    							<Path.RenderTransform>
    								<TransformGroup>
    									<ScaleTransform ScaleX="-1" ScaleY="1"/>
    									<SkewTransform AngleX="0" AngleY="0"/>
    									<RotateTransform Angle="0"/>
    									<TranslateTransform/>
    								</TransformGroup>
    							</Path.RenderTransform>
    						</Path>
    						
						</Grid>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsChecked" Value="true">
    						<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
    					</Trigger>
    					<Trigger Property="IsMouseOver" Value="true">
    						<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
    					</Trigger>
    					<Trigger Property="IsPressed" Value="true">
    						<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="PrimaryExpanderStyle" TargetType="{x:Type Expander}">
    	<Setter Property="Foreground" Value="#FF336699"/>
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    	<Setter Property="VerticalContentAlignment" Value="Stretch"/>
    	<Setter Property="BorderBrush" Value="Transparent"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Expander}">
    				<Grid Margin="-1">
    					<Grid.ColumnDefinitions>
    						<ColumnDefinition/>
    					</Grid.ColumnDefinitions>
    					<DockPanel Grid.ColumnSpan="1">
    						<ToggleButton x:Name="HeaderSite" Cursor="Hand" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1" MinHeight="0" MinWidth="0" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" FontFamily="Segoe UI" FontSize="12" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Top" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" FontWeight="Normal" Height="25" Foreground="{DynamicResource SectionExpanderBrush}"/>
    						<ContentPresenter x:Name="ExpandSite" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="false" Visibility="Collapsed" DockPanel.Dock="Bottom"/>
    					</DockPanel>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsExpanded" Value="true">
    						<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
    					</Trigger>
    					<Trigger Property="ExpandDirection" Value="Right">
    						<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
    						<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
    						<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
    					</Trigger>
    					<Trigger Property="ExpandDirection" Value="Up">
    						<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
    						<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
    						<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
    					</Trigger>
    					<Trigger Property="ExpandDirection" Value="Left">
    						<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
    						<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
    						<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
    					</Trigger>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ComboBoxFocusVisual">
    	<Setter Property="Control.Template">
    		<Setter.Value>
    			<ControlTemplate>
    				<Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="4,4,21,4" SnapsToDevicePixels="true"/>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
    	<GradientStop Color="#F3F3F3" Offset="0"/>
    	<GradientStop Color="#EBEBEB" Offset="0.5"/>
    	<GradientStop Color="#DDDDDD" Offset="0.5"/>
    	<GradientStop Color="#CDCDCD" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
    	<Setter Property="OverridesDefaultStyle" Value="true"/>
    	<Setter Property="IsTabStop" Value="false"/>
    	<Setter Property="Focusable" Value="false"/>
    	<Setter Property="ClickMode" Value="Press"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ToggleButton}">
    				<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}">
    					<Grid HorizontalAlignment="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
    						<Path x:Name="Arrow" Fill="Black" HorizontalAlignment="Center" Margin="3,1,0,0" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}"/>
    					</Grid>
    				</Microsoft_Windows_Themes:ButtonChrome>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsChecked" Value="true">
    						<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
    					</Trigger>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    	<Setter Property="OverridesDefaultStyle" Value="true"/>
    	<Setter Property="AllowDrop" Value="true"/>
    	<Setter Property="MinWidth" Value="0"/>
    	<Setter Property="MinHeight" Value="0"/>
    	<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type TextBox}">
    				<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    	<Setter Property="OverridesDefaultStyle" Value="true"/>
    	<Setter Property="IsTabStop" Value="false"/>
    	<Setter Property="Focusable" Value="false"/>
    	<Setter Property="ClickMode" Value="Press"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ToggleButton}">
    				<Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" SnapsToDevicePixels="true" Background="Transparent" BorderBrush="Transparent"  RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" RoundCorners="false" Width="20" Margin="0">
    					<Path x:Name="Arrow" Fill="{DynamicResource GenericLineGeometryBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource DownArrowGeometry}"/>
    				</Microsoft_Windows_Themes:ButtonChrome>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsChecked" Value="true">
    						<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>
    					</Trigger>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    	<Grid x:Name="Placement" SnapsToDevicePixels="true" Margin="2,0">
    		<Grid.ColumnDefinitions>
    			<ColumnDefinition Width="*"/>
    			<ColumnDefinition Width="22"/>
    		</Grid.ColumnDefinitions>
    		<Popup x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
    			<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Placement}" Color="Transparent">
    				<Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
    					<ScrollViewer Style="{DynamicResource MainSectionScrollViewer}">
    						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
    					</ScrollViewer>
    				</Border>
    			</Microsoft_Windows_Themes:SystemDropShadowChrome>
    		</Popup>
    		<Microsoft_Windows_Themes:ListBoxChrome x:Name="Border" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" RenderMouseOver="{TemplateBinding IsMouseOver}"/>
    		<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="0" Grid.ColumnSpan="2" Padding="0,0,15,0" Grid.IsSharedSizeScope="True"/>
    		<ToggleButton Style="{StaticResource ComboBoxToggleButton}" Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Width="Auto" Padding="0" Margin="0,0,-1,0"/>
    		<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
    	</Grid>
    	<ControlTemplate.Triggers>
    		<Trigger Property="IsKeyboardFocusWithin" Value="true">
    			<Setter Property="Foreground" Value="Black"/>
    		</Trigger>
    		<Trigger Property="IsDropDownOpen" Value="true">
    			<Setter Property="RenderFocused" TargetName="Border" Value="true"/>
    		</Trigger>
    		<Trigger Property="HasItems" Value="false">
    			<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
    		</Trigger>
    		<Trigger Property="IsEnabled" Value="false">
    			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    			<Setter Property="Background" Value="#FFF4F4F4"/>
    		</Trigger>
    		<Trigger Property="IsGrouping" Value="true">
    			<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    		</Trigger>
    		<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
    			<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
    			<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
    		</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type ComboBox}">
    	<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
    	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
    	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
    	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="Height" Value="21"/>
    	<Setter Property="Padding" Value="4,3"/>
    	
		

    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ComboBox}">
    				<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
    					<Grid.ColumnDefinitions>
    						<ColumnDefinition/>
    						<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="25"/>
    					</Grid.ColumnDefinitions>
    					<Popup x:Name="PART_Popup" Margin="1" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Grid.ColumnSpan="2">
    						<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" Color="Transparent">
    							<Border x:Name="DropDownBorder" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
    								<ScrollViewer CanContentScroll="true">
    									<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Contained"/>
    								</ScrollViewer>
    							</Border>
    						</Microsoft_Windows_Themes:SystemDropShadowChrome>
    					</Popup>
    					<ToggleButton Style="{StaticResource ComboBoxReadonlyToggleButton}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1"/>
    					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
    						<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
    						<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
    					</Trigger>
    					<Trigger Property="HasItems" Value="false">
    						<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
    					</Trigger>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    						<Setter Property="Background" Value="#FFF4F4F4"/>
    					</Trigger>
    					<Trigger Property="IsGrouping" Value="true">
    						<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Style.Triggers>
    		<Trigger Property="IsEditable" Value="true">
    			<Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
    			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    			<Setter Property="IsTabStop" Value="false"/>
    			<Setter Property="Padding" Value="3"/>
    			<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
    		</Trigger>
    	</Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
    	<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    	<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    	<Setter Property="Padding" Value="3,0,3,0"/>
    	<Setter Property="Height" Value="auto"/>
    	<Setter Property="MinHeight" Value="22"/>
    	<Setter Property="VerticalAlignment" Value="Center"/>
    	<Setter Property="Foreground" Value="black"/>
    	<Setter Property="MinWidth" Value="150"/>
		
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ComboBoxItem}">
    				<Border x:Name="Bd" SnapsToDevicePixels="true" BorderBrush="Transparent" Background="Transparent" BorderThickness="1" Margin="2,0,2,0" Height="auto">
    					<ContentPresenter Margin="2,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsHighlighted" Value="true">
    						<Setter Property="Background" TargetName="Bd" Value="{DynamicResource RowHighlightedBackgroundBrush}"/>
    						<Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource RowHighlightedBorderBrush}"/>
    					</Trigger>
    					<Trigger Property="IsEnabled" Value="false">
    						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="WindowToolbarSeparatorStyle" TargetType="{x:Type Separator}">
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Separator}">
    				<Canvas SnapsToDevicePixels="true" HorizontalAlignment="Center" Margin="4,2,4,2" Width="1" Background="#66FFFFFF">
    					
    				</Canvas>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
   
    <Style x:Key="SearchResultsPaneTextBoxStyle" TargetType="{x:Type TextBlock}">
    	<Setter Property="TextWrapping" Value="NoWrap"/>
    	<Setter Property="TextTrimming" Value="None"/>
		<Setter Property="Foreground" Value="{DynamicResource DetailsPaneHeaderBrush}"/>
    </Style>
<Style x:Key="BlackPopupStyle" TargetType="{x:Type UserControl}">
        <Setter Property="shell:WindowChrome.WindowChrome">
              <Setter.Value>
                <shell:WindowChrome
                GlassFrameThickness="0"
                ResizeBorderThickness="12"
                   CaptionHeight="30"
                CornerRadius="15" />
            </Setter.Value>
           </Setter>
        <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type UserControl}">
                      <Border MinWidth="200" MinHeight="200" Height="Auto" Width="Auto">
                        <Grid x:Name="WindowGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0">
                        <Rectangle x:Name="WindowBackground" Style="{DynamicResource WindowBackgroundStyle}"/>
                        <Rectangle Style="{DynamicResource WindowHeaderBackgroundStyle}" x:Name="WindowHeaderBackground"/>
                        <AdornerDecorator Grid.Row="0" Grid.Column="0" Margin="0">
                            <!--Window content will be displayed in here-->
                            <ContentPresenter Margin="5"/>
                        </AdornerDecorator>
                        <Grid Margin="10,5,10,0" x:Name="WindowHeaderContainer" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="27.31"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="130"/>
                            </Grid.ColumnDefinitions>
                            <Grid HorizontalAlignment="Stretch" x:Name="WindowHeaderInnerGrid" VerticalAlignment="Top" Height="Auto" Grid.ColumnSpan="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle x:Name="WindowHeaderFade" Fill="{DynamicResource WindowHeaderTitleBackgroundBrush}"/>
                                <Canvas x:Name="TabBegin" Grid.Column="1">
                                    <Rectangle Style="{DynamicResource WindowHeaderIconBufferBackgroundStyle}" x:Name="bgTab"/>
                                    <Path Style="{DynamicResource WindowHeaderIconBufferBackgroundStyle2}"  x:Name="pathTab" />
                                </Canvas>
                                <Rectangle Style="{DynamicResource WindowHeaderBackgroundStyle2}" x:Name="HeaderBackground"/>
                                <StackPanel Grid.Column="2" x:Name="WindowButtonContainer" Orientation="Horizontal" HorizontalAlignment="Right" d:LayoutOverrides="GridBox" >
                                    <Button Width="22" Height="22" Style="{DynamicResource WindowButtonStyle}" x:Name="icMinimise" ToolTip="Minimise" shell:WindowChrome.IsHitTestVisibleInChrome="True" Visibility="Collapsed">
                                        <Frame x:Name="btnMinimise" Template="{DynamicResource icMinimise}" IsHitTestVisible="False"/>
                                    </Button>
                                    <Button Style="{DynamicResource WindowButtonStyle}" x:Name="icMaximise" ToolTip="Maximise" shell:WindowChrome.IsHitTestVisibleInChrome="True" Visibility="Collapsed">
                                        <Frame x:Name="btnMaximise" Template="{DynamicResource icMaximise}" IsHitTestVisible="False"/>
                                    </Button>
                                    <Button Style="{DynamicResource WindowButtonStyle}" x:Name="icRestore" ToolTip="Restore Down" Visibility="Collapsed" shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Frame x:Name="Restore" Template="{DynamicResource icRestore}" IsHitTestVisible="False"/>
                                    </Button>
                                    <Button Style="{DynamicResource WindowButtonStyle}" x:Name="btnClose" ToolTip="Close" shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Frame Template="{DynamicResource icClose}" IsHitTestVisible="False"/>
                                    </Button>
                                </StackPanel>
                                <Ellipse Style="{DynamicResource WindowHeaderIconBackgroundStyle}"/>
                                <DockPanel Grid.ColumnSpan="2">
                                    <Frame Template="{DynamicResource icDocument}" Width="16" Height="16" Visibility="Collapsed"/>
                                    <TextBlock x:Name="lblTitle" Style="{DynamicResource WindowHeaderTextStyle}" Text="Error MessageError MessageError MessageError MessageError MessageError Message"/>
                                    <!--Menu here if required-->
                                </DockPanel>
                            </Grid>
                        </Grid>
                    </Grid>
                   
                   
                    </Border>
                </ControlTemplate>
             </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="GridNoTab" TargetType="{x:Type DataGridCell}">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
    </Style>

    <Style x:Key="GridTab" TargetType="{x:Type DataGridCell}">
        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
    </Style>

</ResourceDictionary>